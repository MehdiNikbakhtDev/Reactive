{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/ProfileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponents.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","features/errors/Notfound.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","verifyEmail","email","resendEmailConfirm","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","loadActivity","getActivity","runInAction","console","log","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","updateAttendeeFollowing","following","followersCount","clearSelectedActivity","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","creds","setToken","modalStore","closeModal","window","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","ItemGroup","marginBottom","secondary","clearing","floated","groupedActivities","group","activityies","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Field","touched","label","initialValues","password","onSubmit","setErrors","handleSubmit","isSubmitting","Form","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handelFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","NotFound","Inline","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"+YAOaA,EAIT,WAAYC,EAASC,GAAyB,yBAH9CD,UAG6C,OAF7CC,gBAE6C,EACzCC,KAAKF,KAAOA,EACZE,KAAKD,WAAaA,GAIbE,EAIT,aAA2C,IAA/BC,EAA8B,uDAAjB,EAAGC,EAAc,uDAAH,EAAG,yBAH1CD,gBAG0C,OAF1CC,cAE0C,EACtCH,KAAKE,WAAaA,EAClBF,KAAKG,SAAWA,GCRxBC,IAAMC,SAASC,QAASC,OAExBH,IAAMI,aAAaC,QAAQC,KAAI,SAAAC,GAC3B,IAAMC,EAAQC,EAAMC,YAAYF,MAEhC,OADIA,IAAOD,EAAOI,QAAQC,cAAf,iBAAyCJ,IAC7CD,KAGXP,IAAMI,aAAaS,SAASP,IAA5B,+BAAAQ,EAAA,MAAgC,WAAMD,GAAN,eAAAC,EAAA,iFAEtBnB,EAAakB,EAASF,QAAT,YAFS,uBAIxBE,EAASnB,KAAO,IAAID,EAAgBoB,EAASnB,KAAMqB,KAAKC,MAAMrB,IAJtC,kBAKjBkB,GALiB,gCAOrBA,GAPqB,2CAAhC,uDAQG,SAACI,GAAuB,IAAD,IACoBA,EAAMJ,SAAxCnB,EADc,EACdA,KAAMwB,EADQ,EACRA,OAAQX,EADA,EACAA,OAAQI,EADR,EACQA,QAC9B,OAAQO,GACJ,KAAK,IAID,GAHsB,QAAlBX,EAAOY,QAAoBzB,EAAK0B,OAAOC,eAAe,OACtDC,GAAQC,KAAK,cAEb7B,EAAK0B,OAAQ,CACb,IAAMI,EAAmB,GACzB,IAAK,IAAMC,KAAO/B,EAAK0B,OACf1B,EAAK0B,OAAOK,IACZD,EAAiBD,KAAK7B,EAAK0B,OAAOK,IAG1C,MAAMD,EAAiBE,OAEvBC,IAAMV,MAAMvB,GAEhB,MACJ,KAAK,IACc,MAAXwB,IAAA,UAAkBP,EAAQ,2BAA1B,aAAkB,EAA6BiB,WAAW,mCAC1DnB,EAAMoB,UAAUC,SAChBH,IAAMV,MAAM,yCAEhB,MACJ,KAAK,IACDK,GAAQC,KAAK,cACb,MACJ,KAAK,IACDd,EAAMC,YAAYqB,eAAerC,GACjC4B,GAAQC,KAAK,iBAGrB,OAAOS,QAAQC,OAAOhB,MAG1B,IAAMiB,EAAe,SAAIrB,GAAJ,OAAmCA,EAASnB,MAC3DyC,EACG,SAAIC,GAAJ,OAAoBpC,IAAMqC,IAAOD,GAAKE,KAAKJ,IAD9CC,EAEI,SAAIC,EAAaG,GAAjB,OAA8BvC,IAAMwC,KAAQJ,EAAKG,GAAMD,KAAKJ,IAFhEC,EAGG,SAAIC,EAAaG,GAAjB,OAA8BvC,IAAMyC,IAAOL,EAAKG,GAAMD,KAAKJ,IAH9DC,EAIG,SAAIC,GAAJ,OAAoBpC,IAAM0C,OAAUN,GAAKE,KAAKJ,IAmDxCS,EAND,CACVC,WA3Ce,CACfC,KAAM,SAACC,GAAD,OAA6B9C,IAAMqC,IAAiC,cAAe,CAAES,WACtFR,KAAKJ,IACVa,QAAS,SAACC,GAAD,OAAgBb,EAAA,sBAAsCa,KAC/DC,OAAQ,SAACC,GAAD,OAAkCf,EAAoB,cAAee,IAC7EC,OAAQ,SAACD,GAAD,OAAkCf,EAAA,sBAAkCe,EAASF,IAAME,IAC3FR,OAAQ,SAACM,GAAD,OAAgBb,EAAA,sBAAkCa,KAC1DI,OAAQ,SAACJ,GAAD,OAAgBb,EAAA,sBAAmCa,EAAnC,WAAgD,MAqCxEK,QAlCY,CACZC,QAAS,kBAAMnB,EAAmB,aAClCoB,MAAO,SAACC,GAAD,OAA0BrB,EAAoB,iBAAkBqB,IACvEC,SAAU,SAACD,GAAD,OAA0BrB,EAAoB,oBAAqBqB,IAC7EE,QAAS,SAACC,GAAD,OAAyBxB,EAAA,uCACcwB,GAAe,KAC/DC,aAAc,kBAAMzB,EAAoB,wBAAyB,KACjE0B,YAAa,SAACrD,EAAesD,GAAhB,OACT3B,EAAA,qCAAkD3B,EAAlD,kBAAiEsD,GAAS,KAC9EC,mBAAoB,SAACD,GAAD,OAChB3B,EAAA,qDAA2D2B,MAyB/DE,SAtBa,CACb3B,IAAK,SAAC4B,GAAD,OAAsB9B,EAAA,oBAAmC8B,KAC9DC,YAAa,SAACC,GACV,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,OAAQH,GACjBnE,IAAMwC,KAAY,SAAU4B,EAAU,CACzCzD,QAAS,CAAE,eAAgB,0BAGnC4D,aAAc,SAACvB,GAAD,OAAgBb,EAAA,kBAAyBa,EAAzB,YAAuC,KACrEwB,YAAa,SAACxB,GAAD,OAAgBb,EAAA,kBAAwBa,KACrDyB,cAAe,SAACC,GAAD,OAA+BvC,EAAA,YAA0BuC,IACxEC,gBAAiB,SAACV,GAAD,OAAsB9B,EAAA,kBAAyB8B,GAAY,KAC5EW,eAAgB,SAACX,EAAkBY,GAAnB,OACZ1C,EAAA,kBAAmC8B,EAAnC,sBAAyDY,KAC7DC,eAAgB,SAACb,EAAkBY,GAAnB,OACZ1C,EAAA,oBAA0C8B,EAA1C,iCAA2EY,OChGpEE,EACX,WAAYC,GAA4B,oBACtCC,OAAOC,OAAOtF,KAAMoF,IAIXG,EASX,WAAYjC,GAAgC,yBAR5CF,QAAcoC,EAQ6B,KAP3CC,MAAgB,GAO2B,KAN3CC,SAAmB,GAMwB,KAL3CC,YAAsB,GAKqB,KAJ3CC,KAAoB,KAIuB,KAH3CC,KAAe,GAG4B,KAF3CC,MAAgB,GAGVxC,IACFtD,KAAKoD,GAAKE,EAASF,GACnBpD,KAAKyF,MAAQnC,EAASmC,MACtBzF,KAAK0F,SAAWpC,EAASoC,SACzB1F,KAAK2F,YAAcrC,EAASqC,YAC5B3F,KAAK4F,KAAOtC,EAASsC,KACrB5F,KAAK8F,MAAQxC,EAASwC,MACtB9F,KAAK6F,KAAOvC,EAASuC,O,SC5BhBE,EACT,WAAYnC,GAAa,oBACrB5D,KAAKqE,SAAWT,EAAKS,SACrBrE,KAAKgG,YAAcpC,EAAKoC,YACxBhG,KAAKiG,MAAQrC,EAAKqC,OCTLC,E,WAUjB,aAAe,IAAD,gCATdC,iBAAmB,IAAIC,IAST,KARdC,sBAAyCb,EAQ3B,KAPdc,UAAW,EAOG,KANdC,SAAU,EAMI,KALdC,gBAAiB,EAKH,KAJdzG,WAAgC,KAIlB,KAHd0G,aAAe,IAAIxG,EAGL,KAFdgF,WAAY,IAAImB,KAAMM,IAAI,OAAO,GAEnB,KAadC,gBAAkB,SAACF,GACf,EAAKA,aAAeA,GAdV,KAiBdG,aAAe,SAAC3B,EAAmB4B,GAE/B,IAAMC,EAAiB,WACnB,EAAK7B,UAAU8B,SAAQ,SAACF,EAAOhF,GACf,cAARA,GAAqB,EAAKoD,UAAUnC,OAAOjB,OAGvD,OAAQoD,GACJ,IAAK,MACD6B,IACA,EAAK7B,UAAUyB,IAAI,OAAO,GAC1B,MACJ,IAAK,UACDI,IACA,EAAK7B,UAAUyB,IAAI,WAAW,GAC9B,MACJ,IAAK,SACDI,IACA,EAAK7B,UAAUyB,IAAI,UAAU,GAC7B,MACJ,IAAK,YACD,EAAKzB,UAAUnC,OAAO,aACtB,EAAKmC,UAAUyB,IAAI,YAAaG,KAvC9B,KAwEdG,eAxEc,sBAwEG,4BAAA9F,EAAA,6DACb,EAAKsF,gBAAiB,EADT,kBAGYzD,EAAMC,WAAWC,KAAK,EAAKgE,aAHvC,QAGHC,EAHG,QAIFpH,KAAKiH,SAAQ,SAAAzD,GAChB,EAAK6D,YAAY7D,MAErB,EAAK8D,cAAcF,EAAOnH,YAC1B,EAAKsH,mBAAkB,GARd,kDAUT,EAAKA,mBAAkB,GAVd,0DAxEH,KAsFdD,cAAgB,SAACrH,GACb,EAAKA,WAAaA,GAvFR,KA0FduH,aA1Fc,uCA0FC,WAAOlE,GAAP,eAAAlC,EAAA,2DACPoC,EAAW,EAAKiE,YAAYnE,IADrB,uBAGP,EAAKiD,iBAAmB/C,EAHjB,kBAIAA,GAJA,cAMP,EAAKkD,gBAAiB,EANf,mBAQczD,EAAMC,WAAWG,QAAQC,GARvC,eAQHE,EARG,OASH,EAAK6D,YAAY7D,GACjBkE,aAAY,WACR,EAAKnB,iBAAmB/C,KAE5B,EAAK+D,mBAAkB,GAbpB,kBAcI/D,GAdJ,kCAgBHmE,QAAQC,IAAR,MACA,EAAKL,mBAAkB,GAjBpB,0DA1FD,2DAgHNF,YAAc,SAAC7D,GACnB,IACU,EADJM,EAAO/C,EAAMoB,UAAU2B,KACzBA,IACAN,EAASqE,QAAUrE,EAASsE,UAAWC,MACnC,SAAA3G,GAAC,OAAIA,EAAEmD,WAAaT,EAAKS,YAE7Bf,EAASwE,OAASxE,EAASyE,eAAiBnE,EAAKS,SACjDf,EAAS0E,KAAT,UAAgB1E,EAASsE,iBAAzB,aAAgB,EAAoBK,MAAK,SAAAC,GAAC,OAAIA,EAAE7D,WAAaf,EAASyE,iBAE1EzE,EAASsC,KAAO,IAAIuC,KAAK7E,EAASsC,MAClC,EAAKO,iBAAiBO,IAAIpD,EAASF,GAAIE,IA1H7B,KA6HNiE,YAAc,SAACnE,GACnB,OAAO,EAAK+C,iBAAiB1D,IAAIW,IA9HvB,KAiIdiE,kBAAoB,SAACe,GACjB,EAAK5B,eAAiB4B,GAlIZ,KAqIdC,eArIc,uCAqIG,WAAO/E,GAAP,mBAAApC,EAAA,6DACP0C,EAAO/C,EAAMoB,UAAU2B,KACvB0E,EAAW,IAAIvC,EAAQnC,GAFhB,kBAIHb,EAAMC,WAAWK,OAAOC,GAJrB,QAKHiF,EAAc,IAAIpD,EAAS7B,IACrByE,aAAenE,EAAMS,SACjCkE,EAAYX,UAAY,CAACU,GACzB,EAAKnB,YAAYoB,GACjBf,aAAY,WACR,EAAKnB,iBAAmBkC,KAVnB,kDAaTd,QAAQC,IAAR,MAbS,0DArIH,2DAsJdc,eAtJc,uCAsJG,WAAOlF,GAAP,SAAApC,EAAA,+EAEH6B,EAAMC,WAAWO,OAAOD,GAFrB,OAGTkE,aAAY,WACR,GAAIlE,EAASF,GAAI,CACb,IAAIqF,EAAe,2BAAO,EAAKlB,YAAYjE,EAASF,KAAQE,GAC5D,EAAK6C,iBAAiBO,IAAIpD,EAASF,GAAIqF,GACvC,EAAKpC,iBAAmBoC,MAPvB,+CAWThB,QAAQC,IAAR,MAXS,wDAtJH,2DAqKdgB,eArKc,uCAqKG,WAAOtF,GAAP,SAAAlC,EAAA,6DACb,EAAKqF,SAAU,EADF,kBAGHxD,EAAMC,WAAWF,OAAOM,GAHrB,OAIToE,aAAY,WACR,EAAKrB,iBAAiBrD,OAAOM,GAC7B,EAAKmD,SAAU,KANV,gDASTkB,QAAQC,IAAR,MACAF,aAAY,WACR,EAAKjB,SAAU,KAXV,yDArKH,2DAqLdoC,iBArLc,sBAqLK,4BAAAzH,EAAA,6DACT0C,EAAO/C,EAAMoB,UAAU2B,KAC7B,EAAK2C,SAAU,EAFA,kBAILxD,EAAMC,WAAWQ,OAAO,EAAK6C,iBAAkBjD,IAJ1C,OAKXoE,aAAY,WAAO,IAAD,EACd,aAAI,EAAKnB,wBAAT,aAAI,EAAuBsB,QAAS,CAAC,IAAD,EAChC,EAAKtB,iBAAiBuB,UAAtB,UACI,EAAKvB,iBAAiBuB,iBAD1B,aACI,EAAiCgB,QAAO,SAAA1H,GAAC,OAAIA,EAAEmD,YAAF,OAAeT,QAAf,IAAeA,OAAf,EAAeA,EAAMS,aACtE,EAAKgC,iBAAiBsB,SAAU,MAC7B,CAAC,IAAD,IACGW,EAAW,IAAIvC,EAAQnC,GAC7B,YAAKyC,wBAAL,mBAAuBuB,iBAAvB,SAAkCjG,KAAK2G,GACvC,EAAKjC,iBAAkBsB,SAAU,EAErC,EAAKxB,iBAAiBO,IAAI,EAAKL,iBAAkBjD,GAAI,EAAKiD,qBAfnD,gDAkBXoB,QAAQC,IAAR,MAlBW,yBAoBXF,aAAY,kBAAM,EAAKjB,SAAU,KApBtB,4EArLL,KA6MdsC,qBA7Mc,sBA6MS,sBAAA3H,EAAA,6DACnB,EAAKqF,SAAU,EADI,kBAGTxD,EAAMC,WAAWQ,OAAO,EAAK6C,iBAAkBjD,IAHtC,OAIfoE,aAAY,WAAO,IAAD,EACd,EAAKnB,iBAAkByC,cAAc,UAAC,EAAKzC,wBAAN,aAAC,EAAuByC,aAC7D,EAAK3C,iBAAiBO,IAAI,EAAKL,iBAAkBjD,GAAI,EAAKiD,qBAN/C,gDASfoB,QAAQC,IAAR,MATe,yBAWfF,aAAY,kBAAM,EAAKjB,SAAU,KAXlB,4EA7MT,KA4NdwC,wBAA0B,SAAC1E,GACvB,EAAK8B,iBAAiBY,SAAQ,SAAAzD,GAC1BA,EAASsE,UAAUb,SAAQ,SAAAuB,GACnBA,EAASjE,WAAaA,IACtBiE,EAASU,UAAYV,EAASW,iBAAmBX,EAASW,iBAC1DX,EAASU,WAAaV,EAASU,kBAjOjC,KAuOdE,sBAAwB,WACpB,EAAK7C,sBAAmBb,GAvOxB2D,YAAmBnJ,MAEnBoJ,aACI,kBAAM,EAAKnE,UAAUoE,UACrB,WACI,EAAK5C,aAAe,IAAIxG,EACxB,EAAKkG,iBAAiBmD,QACtB,EAAKtC,oB,6CAmCjB,WACI,IAAM9D,EAAS,IAAIqG,gBAUnB,OATArG,EAAOwB,OAAO,aAAc1E,KAAKyG,aAAavG,WAAWsJ,YACzDtG,EAAOwB,OAAO,WAAY1E,KAAKyG,aAAatG,SAASqJ,YACrDxJ,KAAKiF,UAAU8B,SAAQ,SAACF,EAAOhF,GACf,cAARA,EACAqB,EAAOwB,OAAO7C,EAAMgF,EAAe4C,eAEnCvG,EAAOwB,OAAO7C,EAAKgF,MAGpB3D,I,4BAGX,WACI,OAAOwG,MAAMC,KAAK3J,KAAKmG,iBAAiByD,UAAUC,MAAK,SAAC3I,EAAG4I,GAAJ,OACnD5I,EAAE0E,KAAMmE,UAAYD,EAAElE,KAAMmE,e,6BAGpC,WACI,OAAO1E,OAAO2E,QACVhK,KAAKiK,iBAAiBC,QAAO,SAACC,EAAY7G,GACtC,IAAMsC,EAAOwE,kBAAO9G,EAASsC,KAAO,eAEpC,OADAuE,EAAWvE,GAAQuE,EAAWvE,GAAX,sBAAuBuE,EAAWvE,IAAlC,CAAyCtC,IAAY,CAACA,GAClE6G,IACR,S,cCjFME,E,WAWjB,aAAe,IAAD,gCAVdvF,QAA0B,KAUZ,KATdwF,gBAAiB,EASH,KARdC,WAAY,EAQE,KAPdhE,SAAU,EAOI,KANdiE,WAAwB,GAMV,KALdC,mBAAoB,EAKN,KAJdC,UAAY,EAIE,KAHdC,eAAiC,GAGnB,KAFdC,mBAAoB,EAEN,KAgBdC,aAAe,SAACH,GACZ,EAAKA,UAAYA,GAjBP,KA2BdI,YA3Bc,uCA2BA,WAAOzG,GAAP,eAAAnD,EAAA,6DACV,EAAKoJ,gBAAiB,EADZ,kBAGgBvH,EAAMqB,SAAS3B,IAAI4B,GAHnC,OAGAS,EAHA,OAIN0C,aAAY,WACR,EAAK1C,QAAUA,EACf,EAAKwF,gBAAiB,KANpB,gDASN7C,QAAQC,IAAR,MACAF,aAAY,kBAAM,EAAK8C,gBAAiB,KAVlC,yDA3BA,2DAyCdhG,YAzCc,uCAyCA,WAAOC,GAAP,iBAAArD,EAAA,6DACV,EAAKqJ,WAAY,EADP,kBAGiBxH,EAAMqB,SAASE,YAAYC,GAH5C,OAGAtD,EAHA,OAIA8J,EAAQ9J,EAASnB,KACvB0H,aAAY,WACW,IAAD,EAAd,EAAK1C,UACL,YAAKA,QAAQkG,cAAb,SAAqBrJ,KAAKoJ,GACtBA,EAAME,QAAUpK,EAAMoB,UAAU2B,OAChC/C,EAAMoB,UAAUiJ,SAASH,EAAMvI,KAC/B,EAAKsC,QAAQmB,MAAQ8E,EAAMvI,MAGnC,EAAK+H,WAAY,KAbf,gDAgBN9C,QAAQC,IAAR,MACAF,aAAY,kBAAM,EAAK+C,WAAY,KAjB7B,yDAzCA,2DA8Dd5F,aA9Dc,uCA8DC,WAAOoG,GAAP,SAAA7J,EAAA,6DACX,EAAKqF,SAAU,EADJ,kBAGDxD,EAAMqB,SAASO,aAAaoG,EAAM3H,IAHjC,OAIPvC,EAAMoB,UAAUiJ,SAASH,EAAMvI,KAC/BgF,aAAY,WACJ,EAAK1C,SAAW,EAAKA,QAAQkG,SAC7B,EAAKlG,QAAQkG,OAAO/C,MAAK,SAAAkD,GAAC,OAAIA,EAAEF,UAASA,QAAS,EAClD,EAAKnG,QAAQkG,OAAO/C,MAAK,SAAAkD,GAAC,OAAIA,EAAE/H,KAAO2H,EAAM3H,MAAK6H,QAAS,EAC3D,EAAKnG,QAAQmB,MAAQ8E,EAAMvI,IAC3B,EAAK+D,SAAU,MAVhB,gDAcPiB,aAAY,kBAAM,EAAKjB,SAAU,KACjCkB,QAAQC,IAAR,MAfO,yDA9DD,2DAiFd9C,YAjFc,uCAiFA,WAAOmG,GAAP,SAAA7J,EAAA,6DACV,EAAKqF,SAAU,EADL,kBAGAxD,EAAMqB,SAASQ,YAAYmG,EAAM3H,IAHjC,OAINoE,aAAY,WACW,IAAD,EAAd,EAAK1C,UACL,EAAKA,QAAQkG,OAAb,UAAsB,EAAKlG,QAAQkG,cAAnC,aAAsB,EAAqBpC,QAAO,SAAAuC,GAAC,OAAIA,EAAE/H,KAAO2H,EAAM3H,MACtE,EAAKmD,SAAU,MAPjB,gDAWNiB,aAAY,kBAAM,EAAKjB,SAAU,KACjCkB,QAAQC,IAAR,MAZM,yDAjFA,2DAiGd7C,cAjGc,uCAiGE,WAAOC,GAAP,SAAA5D,EAAA,6DACZ,EAAKqF,SAAU,EADH,kBAGFxD,EAAMqB,SAASS,cAAcC,GAH3B,OAIR0C,aAAY,WAAO,IAAD,EACV1C,EAAQkB,aAAelB,EAAQkB,eAAR,UAAwBnF,EAAMoB,UAAU2B,YAAxC,aAAwB,EAAsBoC,cACrEnF,EAAMoB,UAAUmJ,eAAetG,EAAQkB,aAE3C,EAAKlB,QAAL,2BAAmB,EAAKA,SAAYA,GACpC,EAAKyB,SAAU,KATX,gDAYRkB,QAAQC,IAAR,MACAF,aAAY,kBAAM,EAAKjB,SAAU,KAbzB,yDAjGF,2DAkHdxB,gBAlHc,uCAkHI,WAAOV,EAAkB2E,GAAzB,SAAA9H,EAAA,6DACb,EAAKqF,SAAU,EADF,kBAGHxD,EAAMqB,SAASW,gBAAgBV,GAH5B,OAITxD,EAAMwK,cAActC,wBAAwB1E,GAC5CmD,aAAY,WAAO,IAAD,IACV,EAAK1C,SAAW,EAAKA,QAAQT,YAAb,UAA0BxD,EAAMoB,UAAU2B,YAA1C,aAA0B,EAAsBS,WAAY,EAAKS,QAAQT,WAAaA,IACtG2E,EAAY,EAAKlE,QAAQmE,iBAAmB,EAAKnE,QAAQmE,iBACzD,EAAKnE,QAAQkE,WAAa,EAAKlE,QAAQkE,WAEvC,EAAKlE,SAAW,EAAKA,QAAQT,YAAb,UAA0BxD,EAAMoB,UAAU2B,YAA1C,aAA0B,EAAsBS,YAChE2E,EAAY,EAAKlE,QAAQwG,iBAAmB,EAAKxG,QAAQwG,kBAE7D,EAAKd,WAAWzD,SAAQ,SAAAjC,GAChBA,EAAQT,WAAaA,IACrBS,EAAQkE,UAAYlE,EAAQmE,iBAAmBnE,EAAQmE,iBACvDnE,EAAQkE,WAAalE,EAAQkE,cAGrC,EAAKzC,SAAU,KAnBV,gDAsBTkB,QAAQC,IAAR,MACAF,aAAY,kBAAM,EAAKjB,SAAU,KAvBxB,yDAlHJ,6DA6IdgF,eA7Ic,uCA6IG,WAAOtG,GAAP,eAAA/D,EAAA,6DACb,EAAKuJ,mBAAoB,EADZ,kBAGgB1H,EAAMqB,SAASY,eAAe,EAAKF,QAAST,SAAUY,GAHtE,OAGHuF,EAHG,OAIThD,aAAY,WACR,EAAKgD,WAAaA,EAClB,EAAKC,mBAAoB,KANpB,gDASTjD,aAAY,kBAAM,EAAKiD,mBAAoB,KATlC,yDA7IH,2DA0Jde,mBA1Jc,uCA0JO,WAAOnH,EAAkBY,GAAzB,eAAA/D,EAAA,6DACjB,EAAK0J,mBAAoB,EADR,kBAGY7H,EAAMqB,SAASc,eAAeb,EAAUY,GAHpD,OAGPkF,EAHO,OAIb3C,aAAY,WACR,EAAKmD,eAAiBR,EACtB,EAAKS,mBAAoB,KANhB,gDASbnD,QAAQC,IAAR,MACAF,aAAY,WACR,EAAKoD,mBAAoB,KAXhB,yDA1JP,wDACVzB,YAAmBnJ,MAEnBoJ,aACI,kBAAM,EAAKsB,aACX,SAAAA,GACI,GAAkB,IAAdA,GAAiC,IAAdA,EAAiB,CACpC,IAAMzF,EAA0B,IAAdyF,EAAkB,YAAc,YAClD,EAAKa,eAAetG,QAEpB,EAAKuF,WAAa,M,+CAUlC,WACI,SAAI3J,EAAMoB,UAAU2B,OAAQ5D,KAAK8E,UACtBjE,EAAMoB,UAAU2B,KAAKS,WAAarE,KAAK8E,QAAQT,a,KChC7CoH,E,WAGjB,aAAe,IAAD,gCAFd7H,KAAoB,KAEN,KAOdD,MAPc,uCAON,WAAO+H,GAAP,eAAAxK,EAAA,+EAEmB6B,EAAMU,QAAQE,MAAM+H,GAFvC,OAEM9H,EAFN,OAGA/C,EAAMC,YAAY6K,SAAS/H,EAAKhD,OAChC4G,aAAY,kBAAM,EAAK5D,KAAOA,KAC9BlC,GAAQC,KAAK,eACbd,EAAM+K,WAAWC,aANjB,uHAPM,2DAmBd3J,OAAS,WACLrB,EAAMC,YAAY6K,SAAS,MAC3BG,OAAOC,aAAaC,WAAW,OAC/B,EAAKpI,KAAO,KACZlC,GAAQC,KAAK,MAvBH,KAyBdsK,QAzBc,sBAyBJ,4BAAA/K,EAAA,+EAEiB6B,EAAMU,QAAQC,UAF/B,OAEIE,EAFJ,OAGF4D,aAAY,kBAAM,EAAK5D,KAAOA,KAH5B,gDAMF6D,QAAQC,IAAR,MANE,yDAzBI,KAkCd7D,SAlCc,uCAkCJ,WAAM6H,GAAN,eAAAxK,EAAA,+EAEiB6B,EAAMU,QAAQI,SAAS6H,GAFxC,OAEI9H,EAFJ,OAGF/C,EAAMC,YAAY6K,SAAS/H,EAAKhD,OAChC4G,aAAY,kBAAM,EAAK5D,KAAOA,KAC9BlC,GAAQC,KAAK,eACbd,EAAM+K,WAAWC,aANf,uHAlCI,2DA8CdX,SAAW,SAACjF,GACJ,EAAKrC,OAAM,EAAKA,KAAKqC,MAAQA,IA/CvB,KAiDdmF,eAAiB,SAACc,GACV,EAAKtI,OAAM,EAAKA,KAAKoC,YAAckG,IAjDvC/C,YAAmBnJ,M,4CAGvB,WACI,QAASA,KAAK4D,S,KCIT/C,EAAe,CACxBwK,cAAe,IAAInF,EACnBpF,YAAY,ICZZ,aAAe,IAAD,gCAJdO,MAA4B,KAId,KAHdT,MAAqBkL,OAAOC,aAAaI,QAAQ,OAGnC,KAFdC,WAAU,EAEI,KAedjK,eAAiB,SAACd,GACd,EAAKA,MAAQA,GAhBH,KAkBdsK,SAAS,SAAC/K,GACN,EAAKA,MAAMA,GAnBD,KAqBdyL,aAAa,WACT,EAAKD,WAAU,GArBfjD,YAAmBnJ,MACnBoJ,aACI,kBAAI,EAAKxI,SACT,SAAAA,GACOA,EACCkL,OAAOC,aAAaO,QAAQ,MAAM1L,GAGlCkL,OAAOC,aAAaC,WAAW,WDI/C/J,UAAW,IAAIwJ,EACfG,WAAY,IETZ,aAAe,IAAD,gCALdW,MAAe,CACXC,MAAM,EACN7J,KAAM,MAGI,KAGd8J,UAAU,SAACC,GACP,EAAKH,MAAMC,MAAK,EAChB,EAAKD,MAAM5J,KAAK+J,GALN,KAOdb,WAAW,WACP,EAAKU,MAAMC,MAAK,EAChB,EAAKD,MAAM5J,KAAK,MARhBwG,YAAmBnJ,OFSvB2M,aAAa,IAAItC,EACjBuC,aAAa,IGfb,aAAe,IAAD,gCAHdC,SAA0B,GAGZ,KAFdC,cAAsC,KAExB,KAIdC,oBAAsB,SAACC,GACfnM,EAAMwK,cAAchF,mBACpB,EAAKyG,eAAgB,IAAIG,KACpBC,QAAQ3M,oBAAmFyM,EAAY,CACpGG,mBAAoB,kCAAMtM,EAAMoB,UAAU2B,YAAtB,aAAM,EAAsBhD,SAEnDwM,yBACAC,iBAAiBC,IAASC,aAC1BC,QAEL,EAAKV,cAAcW,QAAQC,OAAM,SAAArM,GAAK,OAAIoG,QAAQC,IAAI,sCAAuCrG,MAE7F,EAAKyL,cAAca,GAAG,gBAAgB,SAACd,GACnCrF,aAAY,WACRqF,EAAS9F,SAAQ,SAAA6G,GACbA,EAAQC,UAAY,IAAI1F,KAAKyF,EAAQC,UAAY,QAErD,EAAKhB,SAAWA,QAIxB,EAAKC,cAAca,GAAG,kBAAkB,SAACC,GACrCpG,aAAY,WACRoG,EAAQC,UAAY,IAAI1F,KAAKyF,EAAQC,WACrC,EAAKhB,SAASiB,QAAQF,WA5BxB,KAkCdG,kBAAoB,WAAO,IAAD,EACtB,YAAKjB,qBAAL,SAAoBkB,OAAON,OAAM,SAAArM,GAAK,OAAIoG,QAAQC,IAAI,8BAA+BrG,OAnC3E,KAsCd4M,cAAgB,WACZ,EAAKpB,SAAW,GAChB,EAAKkB,qBAxCK,KA2CdG,WA3Cc,uCA2CD,WAAOtE,GAAP,iBAAA1I,EAAA,6DACT0I,EAAOoD,WAAP,UAAoBnM,EAAMwK,cAAchF,wBAAxC,aAAoB,EAAsCjD,GADjD,4BAGC,EAAK0J,qBAHN,aAGC,EAAoBqB,OAAO,cAAevE,GAH3C,sDAKLnC,QAAQC,IAAR,MALK,wDA3CC,sDACVyB,YAAmBnJ,QHmBdoO,EAAeC,wBAAcxN,GAGnC,SAASyN,IACZ,OAAOC,qBAAWH,G,WI1BPI,eAAS,WAAmB,IAAD,EACAF,IAAhCrM,UAAa2B,EADmB,EACnBA,KAAM1B,EADa,EACbA,OAK3B,OACE,cAACuM,EAAA,EAAD,CAAMC,UAAQ,EAACC,MAAM,MAArB,SACE,eAACC,EAAA,EAAD,WACE,eAACH,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASC,GAAG,IAAIC,OAAK,EAACC,QAAM,EAA3C,UACE,qBAAKC,IAAI,mBAAmBC,IAAI,OAAOC,MAAO,CAAEC,YAAa,UAD/D,iBAIA,cAACb,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASC,GAAG,cAAc9C,KAAK,eAC9C,cAACuC,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASC,GAAG,UAAU9C,KAAK,WAC1C,cAACuC,EAAA,EAAKI,KAAN,UACE,cAACU,EAAA,EAAD,CAAQT,GAAIC,IAASC,GAAG,kBAAkBQ,UAAQ,EAAC9C,QAAQ,wBAE7D,eAAC+B,EAAA,EAAKI,KAAN,CACEY,SAAS,QADX,UAEE,cAACC,EAAA,EAAD,CAAOP,KAAS,OAAJvL,QAAI,IAAJA,OAAA,EAAAA,EAAMqC,QAAS,mBAAoB0J,QAAM,EAACC,OAAO,UAC7D,cAACC,EAAA,EAAD,CAAUC,SAAS,WAAWC,KAAI,OAAEnM,QAAF,IAAEA,OAAF,EAAEA,EAAMoC,YAA1C,SACE,eAAC6J,EAAA,EAASpB,KAAV,WACE,cAACoB,EAAA,EAAShB,KAAV,CAAeC,GAAIkB,IAAMhB,GAAE,2BAAepL,QAAf,IAAeA,OAAf,EAAeA,EAAMS,UAAY0L,KAAK,YAAYE,KAAK,SAClF,cAACJ,EAAA,EAAShB,KAAV,CAAeqB,QAAShO,EAAQ6N,KAAK,SAASE,KAAK,0B,8DCzBlDzB,eAAS,WAA4B,IAAD,EACIF,IAA5CjD,cAAgBpG,EADwB,EACxBA,UAAW2B,EADa,EACbA,aAClC,OACI,qCACI,eAAC6H,EAAA,EAAD,CAAM0B,UAAQ,EAACC,KAAK,QAAQf,MAAO,CAAEgB,MAAO,OAAQC,UAAW,IAA/D,UACI,cAACC,EAAA,EAAD,CAAQN,KAAK,SAASO,UAAQ,EAACC,MAAM,OAAO/D,QAAQ,YACpD,cAAC+B,EAAA,EAAKI,KAAN,CACInC,QAAQ,gBACRgE,OAAQzL,EAAU0L,IAAI,OACtBT,QAAS,kBAAMtJ,EAAa,MAAO,WAEvC,cAAC6H,EAAA,EAAKI,KAAN,CACInC,QAAQ,YACRgE,OAAQzL,EAAU0L,IAAI,WACtBT,QAAS,kBAAMtJ,EAAa,UAAW,WAE3C,cAAC6H,EAAA,EAAKI,KAAN,CACInC,QAAQ,cACRgE,OAAQzL,EAAU0L,IAAI,UACtBT,QAAS,kBAAMtJ,EAAa,SAAU,cAG9C,cAAC2J,EAAA,EAAD,IACA,cAAC,IAAD,CACIK,SAAU,SAAChL,GAAD,OAAgBgB,EAAa,YAAahB,IACpDiB,MAAO5B,EAAUxC,IAAI,cAAgB,IAAI0F,a,yFCrB1CqG,gBAAS,YAA2C,IAAD,EAAlB1J,EAAkB,EAAlBA,QAAkB,EAC5BwJ,IAA3B3B,EADuD,EACvDA,aAAc1K,EADyC,EACzCA,UACd8C,EAA4B4H,EAA5B5H,gBAAiBwB,EAAWoG,EAAXpG,QAExB,IAAI,UAAAtE,EAAU2B,YAAV,eAAgBS,YAAaS,EAAQT,SAAU,OAAO,KAO1D,OACI,eAACwM,GAAA,EAAD,CAAQC,SAAS,OAAjB,UACI,cAACD,GAAA,EAAOE,QAAR,CAAgBC,SAAO,EAAC3B,MAAO,CAAEgB,MAAO,QAAxC,SACI,cAACd,EAAA,EAAD,CACI0B,OAAK,EACLR,MAAM,OACN/D,QAAS5H,EAAQkE,UAAY,YAAc,oBAEnD,cAAC6H,GAAA,EAAOE,QAAR,CAAgBG,QAAM,EAAC7B,MAAO,CAAEgB,MAAO,QAAvC,SACI,cAACd,EAAA,EAAD,CACI0B,OAAK,EACLE,OAAK,EACLV,MAAO3L,EAAQkE,UAAY,MAAQ,QACnC0D,QAAS5H,EAAQkE,UAAY,WAAa,SAC1CzC,QAASA,EACT2J,QAAS,SAACkB,GAAD,OApBxB,SAAsBA,EAAmB/M,GACrC+M,EAAEC,iBACFvM,EAAQkE,UAAYjE,EAAgBV,GAAU,GAASU,EAAgBV,GAAU,GAkBtDiN,CAAaF,EAAGtM,EAAQT,qBCzB7CmK,gBAAS,YAAwC,IAAlB1J,EAAiB,EAAjBA,QAO1C,OACI,eAACyM,GAAA,EAAD,CAAMzC,GAAIkB,IAAMhB,GAAE,oBAAelK,EAAQT,UAAzC,UACI,cAACqL,EAAA,EAAD,CAAOP,IAAKrK,EAAQmB,OAAS,qBAC7B,eAACsL,GAAA,EAAKR,QAAN,WACI,cAACQ,GAAA,EAAKhB,OAAN,UAAczL,EAAQkB,cACtB,cAACuL,GAAA,EAAKC,YAAN,UAXZ,SAAkBC,GACd,GAAIA,EACA,OAAOA,EAAIC,OAAS,GAAKD,EAAIE,UAAU,EAAG,IAAM,MAAQF,EASjCG,CAAS9M,EAAQ+M,UAExC,eAACN,GAAA,EAAKR,QAAN,CAAce,OAAK,EAAnB,UACI,cAACC,GAAA,EAAD,CAAM7F,KAAK,SACVpH,EAAQmE,eAFb,gBAIA,cAAC,GAAD,CAAcnE,QAASA,UClBpB0J,gBAAS,YAAyD,IAArB5G,EAAoB,EAApBA,UAClDoK,EAAS,CACXC,YAAa,SACbC,YAAa,GAGjB,OACI,cAACC,GAAA,EAAD,CAAMC,YAAU,EAAhB,SACKxK,EAAUyK,KAAI,SAAA/J,GAAQ,OACnB,cAACgK,GAAA,EAAD,CACIC,WAAS,EAETC,QACI,cAACL,GAAA,EAAKtD,KAAN,CAAmCC,GAAIkB,IAAMhB,GAAE,oBAAe1G,EAASjE,UAAvE,SACI,cAACqL,EAAA,EAAD,CACIU,KAAK,OACLqC,UAAQ,EAACtD,IAAK7G,EAASrC,OAAS,mBAChCyM,UAAQ,EACRrD,MAAO/G,EAASU,UAAYgJ,EAAS,QAL7B1J,EAASjE,UAJjC,SAcI,cAACiO,GAAA,EAAMvB,QAAP,UACI,cAAC,GAAD,CAAajM,QAASwD,OAbrBA,EAASjE,kBCZnB,SAASsO,GAAT,GAAgD,IAAD,IAAnBrP,EAAmB,EAAnBA,SAEvC,OACI,eAACsP,EAAA,EAAQC,MAAT,WACI,eAACD,EAAA,EAAD,WACKtP,EAASwF,aACV,cAACgK,GAAA,EAAD,CAAOtC,SAAS,MAAMC,MAAM,MAAM/D,QAAQ,YAAY2C,MAAO,CAAC0D,UAAU,YAExE,cAACC,GAAA,EAAD,UACI,eAACnE,GAAA,EAAD,WACI,cAACA,GAAA,EAAKa,MAAN,CAAYL,MAAO,CAAE4D,aAAc,GAAK7C,KAAK,OAAOqC,UAAQ,EAACtD,KAAK,UAAA7L,EAAS0E,YAAT,eAAe/B,QAAS,qBAC1F,eAAC4I,GAAA,EAAKkC,QAAN,WACI,cAAClC,GAAA,EAAK0B,OAAN,CAAazB,GAAIkB,IAAMhB,GAAE,sBAAiB1L,EAASF,IAAnD,SACKE,EAASmC,QAEd,eAACoJ,GAAA,EAAK2C,YAAN,wBAA4B,cAAC,IAAD,CAAMxC,GAAE,mBAAc1L,EAASyE,cAA/B,mBAAgDzE,EAAS0E,YAAzD,aAAgD,EAAehC,iBAC1F1C,EAASwE,QACN,cAAC+G,GAAA,EAAK2C,YAAN,UACI,cAACsB,GAAA,EAAD,CAAO3B,OAAK,EAACV,MAAM,SAAnB,6CAKNnN,EAASqE,UAAYrE,EAASwE,QAC5B,cAAC+G,GAAA,EAAK2C,YAAN,UACI,cAACsB,GAAA,EAAD,CAAO3B,OAAK,EAACV,MAAM,QAAnB,yDAUxB,cAACmC,EAAA,EAAD,UACI,iCACI,cAACb,GAAA,EAAD,CAAM7F,KAAK,UAAW9B,kBAAO9G,EAASsC,KAAO,uBAC7C,cAACmM,GAAA,EAAD,CAAM7F,KAAK,WAAY5I,EAASwC,WAGxC,cAAC8M,EAAA,EAAD,CAASM,WAAS,EAAlB,SACI,cAAC,GAAD,CAA0BtL,UAAWtE,EAASsE,cAElD,eAACgL,EAAA,EAAD,CAASO,UAAQ,EAAjB,UACI,+BACK7P,EAASqC,cAEd,cAAC4J,EAAA,EAAD,CACIT,GAAIkB,IACJhB,GAAE,sBAAiB1L,EAASF,IAC5BqN,MAAM,OACN2C,QAAQ,QACR1G,QAAQ,eCzDb8B,oBAAS,WAAyB,IAErC6E,EADkB/E,IAAlBjD,cACAgI,kBACR,OACI,mCACKA,EAAkBhB,KAAI,mCAAEiB,EAAF,KAASC,EAAT,YACnB,eAAC,WAAD,WACI,cAAChD,EAAA,EAAD,CAAQiD,KAAG,EAAC/C,MAAM,OAAlB,SACK6C,IAGIC,EAAYlB,KAAI,SAAA/O,GAAQ,OACrB,cAACqP,GAAD,CAAoCrP,SAAUA,GAAvBA,EAASF,SANjCkQ,W,UCThB,SAASG,KACpB,OACI,cAAC,WAAD,UACI,cAACC,GAAA,EAAD,CAAazC,OAAK,EAAC5B,MAAO,CAAEiB,UAAW,IAAvC,SACI,eAACsC,EAAA,EAAQC,MAAT,WACI,cAACD,EAAA,EAAD,CAASvD,MAAO,CAAEsE,UAAW,KAA7B,SACI,eAACD,GAAA,EAAD,WACI,eAACA,GAAA,EAAYnD,OAAb,CAAoBtK,OAAK,EAAzB,UACI,cAACyN,GAAA,EAAYE,KAAb,IACA,cAACF,GAAA,EAAYE,KAAb,OAEJ,cAACF,GAAA,EAAYG,UAAb,UACI,cAACH,GAAA,EAAYE,KAAb,WAIZ,cAAChB,EAAA,EAAD,UACI,eAACc,GAAA,EAAD,WACI,cAACA,GAAA,EAAYE,KAAb,IACA,cAACF,GAAA,EAAYE,KAAb,SAGR,cAAChB,EAAA,EAAD,CAASM,WAAS,EAAC7D,MAAO,CAAEsE,UAAW,MACvC,cAACf,EAAA,EAAD,CAASO,UAAQ,EAAjB,SACI,cAAC5D,EAAA,EAAD,CAAQuE,UAAQ,EAACrD,MAAM,OAAO2C,QAAQ,QAAQ1G,QAAQ,kBCjB/D8B,oBAAS,WAA8B,IAC1CnD,EAAkBiD,IAAlBjD,cACArE,EAAkEqE,EAAlErE,eAAgBb,EAAkDkF,EAAlDlF,iBAAkBQ,EAAgC0E,EAAhC1E,gBAAiB5G,EAAesL,EAAftL,WAFV,EAGXgU,oBAAS,GAHE,mBAG1CC,EAH0C,KAG7BC,EAH6B,KAejD,OAJAC,qBAAU,WACF/N,EAAiBiK,MAAQ,GAAGpJ,MACjC,CAACb,EAAiBiK,KAAMpJ,IAGvB,eAACmN,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,CAAa/D,MAAM,KAAnB,SACKhF,EAAc7E,iBAAmBwN,EAC9B,qCACI,cAACP,GAAD,IACA,cAACA,GAAD,OAGA,cAAC,IAAD,CACIY,UAAW,EACXC,SArBxB,WACIL,GAAe,GACftN,EAAgB,IAAI1G,EAAaF,EAAYwU,YAAc,IAC3DvN,IAAiBtE,MAAK,kBAAMuR,GAAe,OAmBvBO,SAAUR,KAAiBjU,GAAcA,EAAWwU,YAAcxU,EAAW0U,WAC7EC,aAAa,EAJjB,SAMI,cAAC,GAAD,QAIhB,cAACP,EAAA,EAAKC,OAAN,CAAa/D,MAAM,IAAnB,SACI,cAAC,EAAD,MAEJ,cAAC8D,EAAA,EAAKC,OAAN,CAAa/D,MAAO,GAApB,SACI,cAACsE,EAAA,EAAD,CAAQjE,OAAQsD,Y,iDCpCjB,SAASY,GAAYC,GAAe,IAAD,EACxBC,aAASD,EAAM3I,MADS,mBACvC6I,EADuC,KAChCC,EADgC,KAE9C,OACI,eAAC,KAAKC,MAAN,CAAY5T,MAAO2T,EAAKE,WAAaF,EAAK3T,MAA1C,UACI,gCAAQwT,EAAMM,QACd,iDAAWJ,GAAWF,IACrBG,EAAKE,SAAWF,EAAK3T,MAClB,cAACyR,GAAA,EAAD,CAAO3B,OAAK,EAACV,MAAM,MAAnB,SAA2BuE,EAAK3T,QAChC,QCbDmN,oBAAS,WAAsB,IAClCvM,EAAcqM,IAAdrM,UACR,OACI,cAAC,KAAD,CACImT,cAAe,CAAElR,MAAO,GAAImR,SAAU,GAAIhU,MAAO,MACjDiU,SAAU,SAAC1L,EAAD,OAAW2L,EAAX,EAAWA,UAAX,OAA2BtT,EAAU0B,MAAMiG,GAAQ8D,OAAM,SAAArM,GAAK,OAAIkU,EAAU,CAAElU,MAAO,kCAFnG,SAIK,gBAAGmU,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcjU,EAA/B,EAA+BA,OAA/B,OACG,eAACkU,GAAA,EAAD,CAAMC,UAAU,UAAUL,SAAUE,EAAcI,aAAa,MAA/D,UACI,cAACrF,EAAA,EAAD,CAAQzB,GAAG,KAAKpC,QAAQ,uBAAuB+D,MAAM,OAAOsC,UAAU,WACtE,cAAC6B,GAAD,CAAa1I,KAAK,QAAQ2J,YAAY,UACtC,cAACjB,GAAD,CAAa1I,KAAK,WAAW2J,YAAY,WAAWC,KAAK,aACzD,cAAC,KAAD,CACI5J,KAAK,QACL6J,OAAQ,kBACJ,cAACjD,GAAA,EAAD,CAAOzD,MAAO,CAAE4D,aAAc,IAAM9B,OAAK,EAACV,MAAM,MAAM/D,QAASlL,EAAOH,WAG9E,cAACkO,EAAA,EAAD,CAAQhJ,QAASkP,EAAcjG,UAAQ,EAAC9C,QAAQ,QAAQoJ,KAAK,SAAS7E,OAAK,a,mBCnBhF,SAAS+E,GAAT,GAA8C,IAAlBxU,EAAiB,EAAjBA,OACvC,OACI,cAACyU,GAAA,EAAD,CAAS5U,OAAK,EAAd,SACKG,GACG,cAACyU,GAAA,EAAQ9D,KAAT,UACK3Q,EAAO6Q,KAAI,SAAC6D,EAAUC,GAAX,OACR,cAACF,GAAA,EAAQpH,KAAT,UAAuBqH,GAAJC,UCJ5B3H,oBAAS,WAAyB,IACrCvM,EAAcqM,IAAdrM,UACR,OACI,cAAC,KAAD,CACImT,cAAe,CAAEpP,YAAa,GAAI3B,SAAU,GAAIH,MAAO,GAAImR,SAAU,GAAIhU,MAAO,MAChFiU,SAAU,SAAC1L,EAAD,OAAW2L,EAAX,EAAWA,UAAX,OAA2BtT,EAAU4B,SAAS+F,GAAQ8D,OAAM,SAAArM,GAAK,OAAIkU,EAAU,CAAElU,cAC3F+U,iBAAkBC,KAAW,CACzBrQ,YAAaqQ,OAAaC,WAC1BjS,SAAUgS,OAAaC,WACvBpS,MAAOmS,OAAaC,WAAWpS,QAC/BmR,SAAUgB,OAAaC,aAP/B,SAWK,gBAAGd,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcjU,EAA/B,EAA+BA,OAAQ+U,EAAvC,EAAuCA,QAASC,EAAhD,EAAgDA,MAAhD,OACG,eAACd,GAAA,EAAD,CAAMC,UAAU,gBAAgBL,SAAUE,EAAcI,aAAa,MAArE,UACI,cAACrF,EAAA,EAAD,CAAQzB,GAAG,KAAKpC,QAAQ,yBAAyB+D,MAAM,OAAOsC,UAAU,WACxE,cAAC6B,GAAD,CAAa1I,KAAK,cAAc2J,YAAY,iBAC5C,cAACjB,GAAD,CAAa1I,KAAK,WAAW2J,YAAY,aACzC,cAACjB,GAAD,CAAa1I,KAAK,QAAQ2J,YAAY,UACtC,cAACjB,GAAD,CAAa1I,KAAK,WAAW2J,YAAY,WAAWC,KAAK,aACzD,cAAC,KAAD,CACI5J,KAAK,QACL6J,OAAQ,kBACJ,cAACC,GAAD,CAAkBxU,OAAQA,EAAOH,WAIzC,cAACkO,EAAA,EAAD,CAAQuE,UAAWyC,IAAYC,GAASf,EACpClP,QAASkP,EAAcjG,UAAQ,EAAC9C,QAAQ,WAAWoJ,KAAK,SAAS7E,OAAK,aC7B/EzC,gBAAS,WAAqB,IAAD,EACPF,IAAzBrM,EADgC,EAChCA,UAAU2J,EADsB,EACtBA,WAClB,OACI,cAACgH,EAAA,EAAD,CAASlE,UAAQ,EAACqE,UAAU,SAAS5C,UAAQ,EAACwF,UAAU,WAAxD,SACI,eAAC/G,EAAA,EAAD,CAAWmB,MAAI,EAAf,UACI,eAACQ,EAAA,EAAD,CAAQzB,GAAG,KAAKJ,UAAQ,EAAxB,UACI,cAACgB,EAAA,EAAD,CAAOU,KAAK,UAAUjB,IAAI,mBAAmBC,IAAI,OAAOC,MAAO,CAAE4D,aAAc,MADnF,kBAKIhR,EAAUwU,WACN,qCACI,cAAClG,EAAA,EAAD,CAAQzB,GAAG,KAAKJ,UAAQ,EAAChC,QAAQ,4BACjC,cAAC6C,EAAA,EAAD,CAAQT,GAAIkB,IAAMhB,GAAG,cAAcoB,KAAK,OAAO1B,UAAQ,EAAvD,kCAKJ,qCACA,cAACa,EAAA,EAAD,CAAQW,QAAS,kBAAKtE,EAAWa,UAAU,cAAC,GAAD,MAAe2D,KAAK,OAAO1B,UAAQ,EAA9E,oBAGA,cAACa,EAAA,EAAD,CAAQW,QAAS,kBAAKtE,EAAWa,UAAU,cAAC,GAAD,MAAkB2D,KAAK,OAAO1B,UAAQ,EAAjF,kC,UCvBT,SAASgI,GAAT,GAA+E,IAAD,IAAlDhI,gBAAkD,aAAjChC,eAAiC,MAAvB,aAAuB,EACzF,OACI,cAACiK,GAAA,EAAD,CAAQjG,QAAQ,EAAMhC,SAAUA,EAAhC,SACI,cAACiG,EAAA,EAAD,CAAQjI,QAASA,M,cCEd,SAASkK,GAAW/B,GAAe,IAAD,EACvBC,aAASD,EAAM3I,MADQ,mBACtC6I,EADsC,KAC/BC,EAD+B,KAE7C,OACI,eAAC,KAAKC,MAAN,CAAY5T,MAAO2T,EAAKE,WAAaF,EAAK3T,MAA1C,UACI,gCAAQwT,EAAMM,QACd,oDAAcJ,GAAWF,IACxBG,EAAKE,SAAWF,EAAK3T,MAClB,cAACyR,GAAA,EAAD,CAAO3B,OAAK,EAACV,MAAM,MAAnB,SAA2BuE,EAAK3T,QAChC,Q,cCRD,SAASwV,GAAchC,GAAe,IAAD,EAClBC,aAASD,EAAM3I,MADG,mBACzC6I,EADyC,KAClCC,EADkC,KAC7B8B,EAD6B,KAEhD,OACI,eAAC,KAAK7B,MAAN,CAAY5T,MAAO2T,EAAKE,WAAaF,EAAK3T,MAA1C,UACI,gCAAQwT,EAAMM,QACd,cAAC4B,GAAA,EAAD,CACAC,WAAS,EACTC,QAASpC,EAAMoC,QACfpQ,MAAOkO,EAAMlO,OAAS,KACtB+J,SAAU,SAACQ,EAAE8F,GAAH,OAASJ,EAAQK,SAASD,EAAErQ,QACtCuQ,OAAQ,kBAAMN,EAAQO,YAAW,IACjCxB,YAAahB,EAAMgB,cAElBb,EAAKE,SAAWF,EAAK3T,MAClB,cAACyR,GAAA,EAAD,CAAO3B,OAAK,EAACV,MAAM,MAAnB,SAA2BuE,EAAK3T,QAChC,QC3BT,IAAMiW,GAAkB,CAC3B,CAAEvH,KAAM,SAAUlJ,MAAO,SACzB,CAAEkJ,KAAM,UAAWlJ,MAAO,WAC1B,CAAEkJ,KAAM,OAAQlJ,MAAO,QACvB,CAAEkJ,KAAM,OAAQlJ,MAAO,QACvB,CAAEkJ,KAAM,QAASlJ,MAAO,SACxB,CAAEkJ,KAAM,SAAUlJ,MAAO,W,qBCAd,SAAS0Q,GAAY1C,GAA4C,IAAD,EAC5CC,aAASD,EAAM3I,MAD6B,mBACpE6I,EADoE,KAC7DC,EAD6D,KACvD8B,EADuD,KAE3E,OACI,eAAC,KAAK7B,MAAN,CAAY5T,MAAO2T,EAAKE,WAAaF,EAAK3T,MAA1C,UACI,cAAC,KAAD,uCACQ0T,GACAF,GAFR,IAGI2C,SAAWzC,EAAMlO,OAAS,IAAIsB,KAAK4M,EAAMlO,QAAW,KACpD+J,SAAU,SAAA/J,GAAK,OAAIiQ,EAAQK,SAAStQ,OAEvCmO,EAAKE,SAAWF,EAAK3T,MAClB,cAACyR,GAAA,EAAD,CAAO3B,OAAK,EAACV,MAAM,MAAnB,SAA2BuE,EAAK3T,QAChC,QCFDmN,oBAAS,WACpB,IAAM9M,EAAU+V,eACRpM,EAAkBiD,IAAlBjD,cACAhD,EAC6BgD,EAD7BhD,eAAgBG,EACa6C,EADb7C,eACpBlB,EAAiC+D,EAAjC/D,aAAcd,EAAmB6E,EAAnB7E,eACVpD,EAAOsU,eAAPtU,GALoC,EAMZ2Q,mBAA6B,IAAIxO,GANrB,mBAMrCjC,EANqC,KAM3B6D,EAN2B,KAOtCiP,EAAmBC,KAAW,CAChC5Q,MAAO4Q,OAAaC,SAAS,kCAC7B3Q,YAAa0Q,OAAaC,SAAS,wCACnC5Q,SAAU2Q,OAAaC,SAAS,qCAChC1Q,KAAMyQ,OAAaC,SAAS,iCAAiCqB,WAC7D7R,MAAOuQ,OAAaC,SAAS,kCAC7BzQ,KAAMwQ,OAAaC,SAAS,mCAoBhC,OAlBApC,qBAAU,WACF9Q,GAAIkE,EAAalE,GAAIV,MAAK,SAAAY,GAAQ,OAAI6D,EAAY,IAAI5B,EAAmBjC,SAC9E,CAACF,EAAIkE,IAgBJd,EAAuB,cAACkQ,GAAD,CAAkBhK,QAAQ,wBAGjD,eAACkG,EAAA,EAAD,CAASO,UAAQ,EAAjB,UACI,cAAC5C,EAAA,EAAD,CAAQ7D,QAAQ,mBAAmB8G,KAAG,EAAC/C,MAAM,SAC7C,cAAC,KAAD,CACI2F,iBAAkBA,EAClBwB,oBAAkB,EAClBxC,cAAe9R,EACfgS,SAAU,SAAA1L,GAAM,OAvB5B,SAA0BtG,GACtB,GAAKA,EAASF,GAQVoF,EAAelF,GAAUZ,MAAK,kBAAMhB,EAAQC,KAAR,sBAA4B2B,EAASF,YAR3D,CACd,IAAImF,EAAW,2BACRjF,GADQ,IAEXF,GAAIyU,iBAERxP,EAAeE,GAAa7F,MAAK,kBAAMhB,EAAQC,KAAR,sBAA4B4G,EAAYnF,SAiBvD0U,CAAiBlO,IAJzC,SAKK,gBAAG4L,EAAH,EAAGA,aAAce,EAAjB,EAAiBA,QAASd,EAA1B,EAA0BA,aAAce,EAAxC,EAAwCA,MAAxC,OACG,eAAC,KAAD,CAAMb,UAAU,UAAUL,SAAUE,EAAcI,aAAa,MAA/D,UACI,cAAChB,GAAD,CAAa1I,KAAK,QAAQ2J,YAAY,UACtC,cAACe,GAAD,CAAYmB,KAAM,EAAGlC,YAAY,cAAc3J,KAAK,gBACpD,cAAC2K,GAAD,CAAeI,QAASK,GAAiBzB,YAAY,WAAW3J,KAAK,aACrE,cAACqL,GAAD,CACIS,gBAAgB,OAChB9L,KAAK,OACL+L,gBAAc,EACdC,YAAY,OACZC,WAAW,yBAEf,cAAC5H,EAAA,EAAD,CAAQ7D,QAAQ,mBAAmB8G,KAAG,EAAC/C,MAAM,SAC7C,cAACmE,GAAD,CAAaiB,YAAY,OAAO3J,KAAK,SACrC,cAAC0I,GAAD,CAAaiB,YAAY,QAAQ3J,KAAK,UACtC,cAACqD,EAAA,EAAD,CACIuE,SAAU2B,IAAiBe,IAAUD,EACrChQ,QAASkP,EACTrC,QAAQ,QACR5D,UAAQ,EACRsG,KAAK,SACLpJ,QAAQ,WACZ,cAAC6C,EAAA,EAAD,CAAiCT,GAAIkB,IAAMhB,GAAG,cAAcoE,QAAQ,QAAQ0C,KAAK,SAASpJ,QAAQ,uB,oBCpE3G8B,gBAAS,YAAsD,IAAtBxB,EAAqB,EAArBA,WAC5CJ,EAAiB0B,IAAjB1B,aAWR,OATAsH,qBAAU,WAIN,OAHIlH,GACAJ,EAAaG,oBAAoBC,GAE9B,WACHJ,EAAaqB,mBAElB,CAACrB,EAAcI,IAGd,qCACI,cAAC4F,EAAA,EAAD,CACIG,UAAU,SACVvC,SAAS,MACT9B,UAAQ,EACR+B,MAAM,OACNpB,MAAO,CAAE+I,OAAQ,QALrB,SAOI,cAAC7H,EAAA,EAAD,sCAEJ,eAACqC,EAAA,EAAD,CAASpC,UAAQ,EAAC2C,UAAQ,EAA1B,UACI,cAAC,KAAD,CACImC,SAAU,SAAC1L,EAAD,OAAWyO,EAAX,EAAWA,UAAX,OACNzL,EAAasB,WAAWtE,GAAQlH,MAAK,kBAAM2V,QAC/CjD,cAAe,CAAEzS,KAAM,IACvByT,iBAAkBC,KAAW,CACzB1T,KAAM0T,OAAaC,aAL3B,SAQK,gBAAGb,EAAH,EAAGA,aAAcc,EAAjB,EAAiBA,QAASf,EAA1B,EAA0BA,aAA1B,OACG,cAAC,KAAD,CAAMG,UAAU,UAAhB,SACI,cAAC,KAAD,CAAOzJ,KAAK,OAAZ,SACK,SAAC2I,GAAD,OACG,sBAAKxF,MAAO,CAAEI,SAAU,YAAxB,UACI,cAACkF,EAAA,EAAD,CAAQjE,OAAQ+E,IAChB,kDACII,YAAY,mEACZkC,KAAM,GACFlD,EAAME,OAHd,IAIIuD,WAAY,SAAAlH,GACM,UAAVA,EAAEvP,KAAmBuP,EAAEmH,UAGb,UAAVnH,EAAEvP,KAAoBuP,EAAEmH,WACxBnH,EAAEC,iBACFkF,GAAWf,oBAU/C,cAACgD,GAAA,EAAQ3F,MAAT,UACKjG,EAAaC,SAASwF,KAAI,SAAAzE,GAAO,OAC9B,eAAC4K,GAAA,EAAD,WACI,cAACA,GAAA,EAAQC,OAAT,CAAgBtJ,IAAKvB,EAAQ3H,OAAS,qBACtC,eAACuS,GAAA,EAAQzH,QAAT,WACI,cAACyH,GAAA,EAAQE,OAAT,CAAgB5J,GAAIkB,IAAMhB,GAAE,oBAAepB,EAAQvJ,UAAnD,SACKuJ,EAAQ5H,cAEb,cAACwS,GAAA,EAAQG,SAAT,UACI,gCAAMC,aAAoBhL,EAAQC,WAAlC,YAEJ,cAAC2K,GAAA,EAAQK,KAAT,CAAcxJ,MAAO,CAAEyJ,WAAY,YAAnC,SAAkDlL,EAAQjL,YATpDiL,EAAQxK,kBChExC2V,GAAqB,CACvBnQ,OAAQ,mBAGNoQ,GAAyB,CAC3BvJ,SAAU,WACVwJ,OAAQ,KACRC,KAAM,KACN7I,MAAO,OACP8I,OAAQ,OACR1I,MAAO,SAOIjC,gBAAS,YAAsD,IAAD,IAAnBlL,EAAmB,EAAnBA,SAAmB,EACMgL,IAAvEjD,cAAiB1C,EADgD,EAChDA,iBAAkBpC,EAD8B,EAC9BA,QAASsC,EADqB,EACrBA,qBACpD,OACI,eAAC+J,EAAA,EAAQC,MAAT,WACI,eAACD,EAAA,EAAD,CAASzB,OAAK,EAACX,SAAS,MAAMnB,MAAO,CAAE+J,QAAS,KAAhD,UACK9V,EAASwF,aACN,cAACgK,GAAA,EAAD,CAAOzD,MAAO,CAAEI,SAAU,WAAY4J,OAAQ,IAAMH,MAAO,GAAII,IAAK,IAAMC,QAAM,EAAC9I,MAAM,MAAM/D,QAAQ,cAEzG,cAACgD,EAAA,EAAD,CAAOP,IAAG,iCAA4B7L,EAASoC,SAArC,QAAqDuL,OAAK,EAAC5B,MAAO0J,KAC5E,cAACnG,EAAA,EAAD,CAASvD,MAAO2J,GAAwB7H,OAAK,EAA7C,SACI,cAACtC,GAAA,EAAKgE,MAAN,UACI,cAAChE,GAAA,EAAD,UACI,eAACA,GAAA,EAAKkC,QAAN,WACI,cAACR,EAAA,EAAD,CACIH,KAAK,OACL1D,QAASpJ,EAASmC,MAClB4J,MAAO,CAAEoB,MAAO,WAEpB,4BAAIrG,kBAAO9G,EAASsC,KAAO,iBAC3B,2CACc,mCAAQ,eAAC,IAAD,CAAMoJ,GAAE,8BAAe1L,EAAS0E,YAAxB,aAAe,EAAe3D,UAAtC,wBAAoDf,EAAS0E,YAA7D,aAAoD,EAAehC,eAA3E,sBAOlC,cAAC4M,EAAA,EAAD,CAASO,UAAQ,EAAC3C,SAAS,SAA3B,SACKlN,EAASwE,OACN,qCACI,cAACyH,EAAA,EAAD,CACIkB,MAAOnN,EAASwF,YAAc,QAAU,MACxCsK,QAAQ,OACRjC,OAAK,EACLzE,QAASpJ,EAASwF,YAAc,uBAAyB,kBACzDoH,QAASrH,EACTtC,QAASA,IAIb,cAACgJ,EAAA,EAAD,CACIuE,SAAUxQ,EAASwF,YACnBgG,GAAIkB,IACJhB,GAAE,kBAAa1L,EAASF,IACxBqN,MAAM,SACN2C,QAAQ,QALZ,6BASJ9P,EAASqE,QACT,cAAC4H,EAAA,EAAD,CACIhJ,QAASA,EACT2J,QAASvH,EAFb,+BAIA,cAAC4G,EAAA,EAAD,CACIuE,SAAUxQ,EAASwF,YACnBvC,QAASA,EACT2J,QAASvH,EACT8H,MAAM,OAJV,mCCrELjC,gBAAS,YAAkD,IAAnBlL,EAAkB,EAAlBA,SACnD,OACI,eAACsP,EAAA,EAAQC,MAAT,WACI,cAACD,EAAA,EAAD,CAASpC,SAAS,MAAlB,SACI,eAAC2D,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,CAAa/D,MAAO,EAApB,SACI,cAAC0B,GAAA,EAAD,CAAM3B,KAAK,QAAQK,MAAM,OAAOvE,KAAK,WAEzC,cAACiI,EAAA,EAAKC,OAAN,CAAa/D,MAAO,GAApB,SACI,4BAAI/M,EAASqC,qBAIzB,cAACiN,EAAA,EAAD,CAASpC,UAAQ,EAAjB,SACI,eAAC2D,EAAA,EAAD,CAAMqF,cAAc,SAApB,UACI,cAACrF,EAAA,EAAKC,OAAN,CAAa/D,MAAO,EAApB,SACI,cAAC0B,GAAA,EAAD,CAAM7F,KAAK,WAAWkE,KAAK,QAAQK,MAAM,WAE7C,cAAC0D,EAAA,EAAKC,OAAN,CAAa/D,MAAO,GAApB,SACR,+BACGjG,kBAAO9G,EAASsC,KAAM,gCAKzB,cAACgN,EAAA,EAAD,CAASpC,UAAQ,EAAjB,SACI,eAAC2D,EAAA,EAAD,CAAMqF,cAAc,SAApB,UACI,cAACrF,EAAA,EAAKC,OAAN,CAAa/D,MAAO,EAApB,SACI,cAAC0B,GAAA,EAAD,CAAM7F,KAAK,SAASkE,KAAK,QAAQK,MAAM,WAE3C,cAAC0D,EAAA,EAAKC,OAAN,CAAa/D,MAAO,GAApB,SACI,iCAAO/M,EAASwC,MAAhB,KAAyBxC,EAASuC,qBChC3C2I,gBAAS,YAA4E,IAAD,IAAxClL,SAAYsE,EAA4B,EAA5BA,UAAWI,EAAiB,EAAjBA,KAC9E,OAAKJ,EAED,qCACI,eAACgL,EAAA,EAAD,CACIG,UAAU,SACV1D,MAAO,CAAE+I,OAAQ,QACjB5H,SAAS,MACT0C,WAAS,EACTxE,UAAQ,EACR+B,MAAM,OANV,UAQK7I,EAAU8J,OARf,IAQ6C,IAArB9J,EAAU8J,OAAe,SAAW,SAR5D,YAUA,cAACkB,EAAA,EAAD,CAASpC,UAAQ,EAAjB,SACI,cAAC2B,GAAA,EAAD,CAAMsH,SAAO,EAACC,SAAO,EAArB,SACK9R,EAAUyK,KAAI,SAAA/J,GAAQ,OACnB,eAACuG,GAAA,EAAD,CAAMQ,MAAO,CAAEI,SAAU,YAAzB,UACKnH,EAASjE,YAAT,OAAsB2D,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAM3D,WACzB,cAACyO,GAAA,EAAD,CACIzD,MAAO,CAAEI,SAAU,YACnBgB,MAAM,SACN8I,OAAO,QAHX,kBAOJ,cAAC7J,EAAA,EAAD,CAAOU,KAAK,OAAOjB,IAAK7G,EAASrC,OAAS,qBAC1C,eAAC4I,GAAA,EAAKkC,QAAN,CAAcyI,cAAc,SAA5B,UACI,cAAC3K,GAAA,EAAK0B,OAAN,CAAazB,GAAG,KAAhB,SACI,cAAC,IAAD,CAAME,GAAE,oBAAe1G,EAASjE,UAAhC,SAA6CiE,EAAStC,gBAEzDsC,EAASU,WACV,cAAC6F,GAAA,EAAK8K,MAAN,CAAYtK,MAAO,CAAEoB,MAAO,UAA5B,4BAfoCnI,EAASjE,oBAhBlD,QCAZmK,gBAAS,WAA4B,IACzCnD,EAAiBiD,IAAjBjD,cACkB/H,EAAiE+H,EAAnFhF,iBAA4BiB,EAAuD+D,EAAvD/D,aAAcd,EAAyC6E,EAAzC7E,eAAgB0C,EAAyBmC,EAAzBnC,sBAC1D9F,EAAMsU,eAANtU,GAOP,OALA8Q,qBAAU,WAEN,OADI9Q,GAAIkE,EAAalE,GACd,kBAAM8F,OACd,CAAC9F,EAAIkE,EAAc4B,IAElB1C,IAAmBlD,EAAiB,cAACoT,GAAD,IAGpC,eAACvC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,OAAN,CAAa/D,MAAO,GAApB,UACI,cAAC,GAAD,CAAwB/M,SAAUA,IAClC,cAAC,GAAD,CAAsBA,SAAUA,IAChC,cAAC,GAAD,CAAsB0J,WAAY1J,EAASF,QAE/C,cAAC+Q,EAAA,EAAKC,OAAN,CAAa/D,MAAO,EAApB,SACI,cAAC,GAAD,CAAyB/M,SAAUA,YCxBpC,SAASsW,KACpB,IADiC,EAEL7F,mBAAS,MAFJ,mBAE1BvS,EAF0B,KAElB+T,EAFkB,KA2BjC,OACI,qCACI,cAAChF,EAAA,EAAD,CAAQzB,GAAG,KAAKpC,QAAQ,yBACxB,cAACkG,EAAA,EAAD,UACI,eAACrD,EAAA,EAAOsD,MAAR,CAAcgH,OAAO,IAArB,UACI,cAACtK,EAAA,EAAD,CAAQW,QA7BxB,WACI9P,IAAMqC,IAAIqX,uBAA6BpM,OAAM,SAAAwI,GAAG,OAAIzO,QAAQC,IAAIwO,EAAIjV,cA4BvByL,QAAQ,YAAYyE,OAAK,EAAC4I,SAAO,IAClE,cAACxK,EAAA,EAAD,CAAQW,QA1BxB,WACI9P,IAAMqC,IAAIqX,yBAA+BpM,OAAM,SAAAwI,GAAG,OAAIzO,QAAQC,IAAIwO,EAAIjV,cAyBvByL,QAAQ,cAAcyE,OAAK,EAAC4I,SAAO,IACtE,cAACxK,EAAA,EAAD,CAAQW,QAXxB,WACI9P,IAAMwC,KAAKkX,iBAAwB,IAAIpM,OAAM,SAAAwI,GAAG,OAAIX,EAAUW,OAUVxJ,QAAQ,mBAAmByE,OAAK,EAAC4I,SAAO,IAChF,cAACxK,EAAA,EAAD,CAAQW,QAxBxB,WACI9P,IAAMqC,IAAIqX,0BAAgCpM,OAAM,SAAAwI,GAAmBzO,QAAQC,IAAIwO,EAAIjV,cAuBnCyL,QAAQ,eAAeyE,OAAK,EAAC4I,SAAO,IACxE,cAACxK,EAAA,EAAD,CAAQW,QArBxB,WACI9P,IAAMqC,IAAIqX,0BAAgCpM,OAAM,SAAAwI,GAAG,OAAIzO,QAAQC,IAAIwO,EAAIjV,cAoBtByL,QAAQ,eAAeyE,OAAK,EAAC4I,SAAO,IACzE,cAACxK,EAAA,EAAD,CAAQW,QAlBxB,WACI9P,IAAMqC,IAAIqX,2BAAiCpM,OAAM,SAAAwI,GAAG,OAAIzO,QAAQC,IAAIwO,OAiBxBxJ,QAAQ,WAAWyE,OAAK,EAAC4I,SAAO,SAGvEvY,GACG,cAACwU,GAAD,CAAkBxU,OAAQA,OC3C3BgN,oBAAS,WAAwB,IAAD,IACnC1N,EAAgBwN,IAAhBxN,YACR,OACI,eAAC8N,EAAA,EAAD,WACI,cAAC2B,EAAA,EAAD,CAAQzB,GAAG,KAAKpC,QAAQ,iBACxB,cAAC6D,EAAA,EAAD,CAAQiD,KAAG,EAAC1E,GAAG,KAAK2B,MAAM,MAAM/D,QAAO,UAAE5L,EAAYO,aAAd,aAAE,EAAmB2Y,WAC3D,UAAAlZ,EAAYO,aAAZ,eAAmB8B,UAChB,eAACyP,EAAA,EAAD,WACI,cAACrC,EAAA,EAAD,CAAQzB,GAAG,KAAKpC,QAAQ,cAAc+D,MAAM,SAC5C,sBAAMpB,MAAO,CAAEiB,UAAW,QAA1B,SAAqCxP,EAAYO,MAAM8B,mB,UCT5DqL,gBAAS,WAA0B,IACtC5C,EAAe0C,IAAf1C,WACR,OACI,cAACqO,GAAA,EAAD,CAAOzN,KAAMZ,EAAWW,MAAMC,KAAM0N,QAAStO,EAAWC,WAAYuE,KAAK,OAAzE,SACI,cAAC6J,GAAA,EAAMlJ,QAAP,UACKnF,EAAWW,MAAM5J,Y,UCEnB6L,gBAAS,YAAgD,IAAtB2L,EAAqB,EAArBA,YAAqB,EAClB7L,IAA1C3B,aAAe7H,EAD6C,EAC7CA,QAASD,EADoC,EACpCA,cAC/B,OACI,cAAC,KAAD,CACIuQ,cAAe,CAACpP,YAAW,OAAElB,QAAF,IAAEA,OAAF,EAAEA,EAASkB,YAAa6L,IAAG,OAAE/M,QAAF,IAAEA,OAAF,EAAEA,EAAS+M,KACjEyD,SAAU,SAAA1L,GACN/E,EAAc+E,GAAQlH,MAAK,WACvByX,GAAY,OAGpB/D,iBAAkBC,KAAW,CACzBrQ,YAAaqQ,OAAaC,aARlC,SAWK,gBAAEb,EAAF,EAAEA,aAAcc,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,MAAzB,OACG,eAAC,KAAD,CAAMb,UAAU,UAAhB,UACI,cAACf,GAAD,CAAaiB,YAAY,eAAe3J,KAAK,gBAC7C,cAAC0K,GAAD,CAAYmB,KAAM,EAAGlC,YAAY,eAAe3J,KAAK,QACrD,cAACqD,EAAA,EAAD,CACIC,UAAQ,EACRsG,KAAK,SACLvP,QAASkP,EACT/I,QAAQ,iBACR0G,QAAQ,QACRU,UAAWyC,IAAYC,aC9BhChI,gBAAS,WAAyB,IACtC7B,EAAgB2B,IAAhB3B,aACAyN,EAA0BzN,EAA1ByN,cAAetV,EAAW6H,EAAX7H,QAFsB,EAGZiP,oBAAS,GAHG,mBAGrCzN,EAHqC,KAG3B6T,EAH2B,KAK5C,OACI,cAACE,GAAA,EAAIC,KAAL,UACI,eAACnG,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,OAAN,CAAa/D,MAAM,KAAnB,UACI,cAACE,EAAA,EAAD,CAAQ6C,QAAQ,OAAOnD,KAAK,OAAOvD,QAAO,uBAAW5H,QAAX,IAAWA,OAAX,EAAWA,EAASkB,eAC7DoU,GACG,cAAC7K,EAAA,EAAD,CACI6D,QAAQ,QACRjC,OAAK,EACLzE,QAASpG,EAAW,SAAW,eAC/B4J,QAAS,kBAAMiK,GAAa7T,SAIxC,cAAC6N,EAAA,EAAKC,OAAN,CAAa/D,MAAM,KAAnB,SACK/J,EAAW,cAAC,GAAD,CAAiB6T,YAAaA,IAAkB,sBAAM9K,MAAO,CAACyJ,WAAY,YAA1B,gBAAwChU,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAS+M,gBClB3H0I,GAAQ,CACV,CAAEC,SAAU,gBAAiBC,KAAM,CAAE5Y,IAAK,WAC1C,CAAE2Y,SAAU,cAAeC,KAAM,CAAE5Y,IAAK,SACxC,CAAE2Y,SAAU,UAAWC,KAAM,CAAE5Y,IAAK,aAGzB2M,gBAAS,WAA8B,IAC1C7B,EAAiB2B,IAAjB3B,aAEJnB,EAIAmB,EAJAnB,mBACA1G,EAGA6H,EAHA7H,QACA8F,EAEA+B,EAFA/B,kBACAD,EACAgC,EADAhC,eAGJuJ,qBAAU,WACN1I,EAAmB1G,EAAST,YAC7B,CAACmH,EAAoB1G,IAMxB,OACI,cAACuV,GAAA,EAAIC,KAAL,CAAU/T,QAASqE,EAAnB,SACI,eAACuJ,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,CAAa/D,MAAO,GAApB,SACI,cAACE,EAAA,EAAD,CAAQ6C,QAAQ,OAAOnD,KAAK,WAAWvD,QAAS,iBAEpD,eAACyH,EAAA,EAAKC,OAAN,CAAa/D,MAAO,GAApB,UACI,cAACgK,GAAA,EAAD,CACIE,MAAOA,GACPG,KAAM,CAAExH,WAAW,EAAMpD,UAAU,GACnC6K,YAAa,SAACvJ,EAAGtR,GAAJ,OAdT,SAACsR,EAAmBtR,GACxC0L,EAAmB1G,EAAST,SAAUkW,GAAMza,EAAK8a,aAAuBH,KAAK5Y,KAanCgZ,CAAgBzJ,EAAGtR,MAEjD,uBACA,cAACyR,GAAA,EAAKsB,MAAN,CAAYiI,YAAa,EAAzB,SACKnQ,EAAe0H,KAAI,SAAC/O,GAAD,OAChB,eAACiO,GAAA,EAAD,CACIzC,GAAIkB,IACJhB,GAAE,sBAAiB1L,EAASF,IAFhC,UAKI,cAACsM,EAAA,EAAD,CACIP,IAAG,iCAA4B7L,EAASoC,SAArC,QACH2J,MAAO,CAAEsE,UAAW,IAAKoH,UAAW,WAExC,eAACxJ,GAAA,EAAKR,QAAN,WACI,cAACQ,GAAA,EAAKhB,OAAN,CAAawC,UAAU,SAAvB,SAAiCzP,EAASmC,QAC1C,eAAC8L,GAAA,EAAKyJ,KAAN,CAAWjI,UAAU,SAArB,UACI,8BAAM3I,kBAAO,IAAIjC,KAAK7E,EAASsC,MAAO,YACtC,8BAAMwE,kBAAO,IAAIjC,KAAK7E,EAASsC,MAAO,oBAVzCtC,EAASF,oBC3C/BoL,gBAAS,WAA8B,IAC3C7B,EAAgB2B,IAAhB3B,aACA7H,EAAqD6H,EAArD7H,QAAS0F,EAA4CmC,EAA5CnC,WAAYC,EAAgCkC,EAAhClC,kBAAmBC,EAAaiC,EAAbjC,UAE/C,OACI,cAAC2P,GAAA,EAAIC,KAAL,CAAU/T,QAASkE,EAAnB,SACI,eAAC0J,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,CAAa/D,MAAM,KAAnB,SACI,cAACE,EAAA,EAAD,CACI6C,QAAQ,OACRnD,KAAK,OACLvD,QAAuB,IAAdhC,EAAA,2BAAsC5F,EAASkB,aAA/C,wBAAyElB,QAAzE,IAAyEA,OAAzE,EAAyEA,EAASkB,YAAlF,qBAGjB,cAACmO,EAAA,EAAKC,OAAN,CAAa/D,MAAM,KAAnB,SACI,cAACkB,GAAA,EAAKsB,MAAN,CAAYiI,YAAa,EAAzB,SACKtQ,EAAW6H,KAAI,SAAAvN,GAAO,OACnB,cAAC,GAAD,CAAoCA,QAASA,GAA3BA,EAAQT,yB,iBCdvC,SAAS4W,GAAT,GAAgE,IAAnCC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,WACtD,OACI,cAAC,KAAD,CACIhM,IAAK+L,EACL7L,MAAO,CAAC8J,OAAQ,IAAK9I,MAAO,QAC5B+K,mBAAoB,EACpBC,YAAa,EACbC,QAAQ,eACRC,QAAQ,EACRC,SAAU,EACVC,aAAc,EACdC,YAAY,EACZC,cAAe,SAAAC,GAAO,OAAIT,EAAWS,M,cCblC,SAASC,GAAT,GAAiD,IAAnBC,EAAkB,EAAlBA,SACnCC,EAAW,CACb3D,OAAQ,kBACRnG,YAAa,OACb+J,aAAc,MACdC,WAAY,OACZlJ,UAAW,SACXoG,OAAQ,KAON+C,EAASC,uBAAY,SAAAC,GACvBN,EAASM,EAAc/J,KAAI,SAAC9N,GAAD,OAAec,OAAOC,OAAOf,EAAM,CAC1D+W,QAASe,IAAIC,gBAAgB/X,WAElC,CAACuX,IAlBuD,EAmBLS,aAAY,CAAEL,WAA5DM,EAnBmD,EAmBnDA,aAAcC,EAnBqC,EAmBrCA,cAAeC,EAnBsB,EAmBtBA,aAErC,OACI,gDAASF,KAAT,IAAyBnN,MAAOqN,EAAY,2BAAOX,GAZtC,CACb9J,YAAa,UAW+D8J,EAA5E,UACI,qCAAWU,MACX,cAAC1K,GAAA,EAAD,CAAM7F,KAAK,SAASkE,KAAK,SACzB,cAACG,EAAA,EAAD,CAAQ7D,QAAQ,wBCvBb,SAASiQ,GAAT,GAA2D,IAA/BpW,EAA8B,EAA9BA,QAASjC,EAAqB,EAArBA,YAAqB,EAC3CyP,mBAAc,IAD6B,mBAC9D6I,EAD8D,KACvDd,EADuD,OAEvC/H,qBAFuC,mBAE9D6H,EAF8D,KAErDT,EAFqD,KAgBrE,OANAjH,qBAAU,WACN,OAAO,WACH0I,EAAM7V,SAAQ,SAACxC,GAAD,OAAe8X,IAAIQ,gBAAgBtY,EAAK+W,eAE3D,CAACsB,IAGA,eAACzI,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,OAAN,CAAa/D,MAAO,EAApB,UACI,cAACE,EAAA,EAAD,CAAQiD,KAAG,EAAC/C,MAAM,OAAO/D,QAAQ,uBACjC,cAACmP,GAAD,CAAqBC,SAAUA,OAEnC,cAAC3H,EAAA,EAAKC,OAAN,CAAa/D,MAAO,IACpB,eAAC8D,EAAA,EAAKC,OAAN,CAAa/D,MAAO,EAApB,UACI,cAACE,EAAA,EAAD,CAAQiD,KAAG,EAAC/C,MAAM,OAAO/D,QAAQ,0BAChCkQ,GAASA,EAAMlL,OAAS,GACrB,cAACuJ,GAAD,CAAoBE,WAAYA,EAAYD,aAAc0B,EAAM,GAAGtB,aAG3E,cAACnH,EAAA,EAAKC,OAAN,CAAa/D,MAAO,IACpB,eAAC8D,EAAA,EAAKC,OAAN,CAAa/D,MAAO,EAApB,UACI,cAACE,EAAA,EAAD,CAAQiD,KAAG,EAAC/C,MAAM,OAAO/D,QAAQ,8BAChCkQ,GAASA,EAAMlL,OAAS,GACrB,qCACI,qBAAKiE,UAAU,cAActG,MAAO,CAAEsE,UAAW,IAAKmJ,SAAU,YAChE,eAACvN,EAAA,EAAOsD,MAAR,CAAcgH,OAAQ,EAAtB,UACI,cAACtK,EAAA,EAAD,CAAQhJ,QAASA,EAAS2J,QAhClD,WACQ0L,GACAA,EAAQmB,mBAAmBC,QAAO,SAAAC,GAAI,OAAI3Y,EAAY2Y,OA8BKzN,UAAQ,EAACS,KAAK,UACzD,cAACV,EAAA,EAAD,CAAQuE,SAAUvN,EAAS2J,QAAS,kBAAM4L,EAAS,KAAK7L,KAAK,sBCpC1EzB,oBAAS,YAA4C,IAAD,EAAlB1J,EAAkB,EAAlBA,QAAkB,EAEPwJ,IADhD3B,aAAgByN,EADuC,EACvCA,cAAe9V,EADwB,EACxBA,YACnCiG,EAF2D,EAE3DA,UAAWhE,EAFgD,EAEhDA,QAAS5B,EAFuC,EAEvCA,aAAcC,EAFyB,EAEzBA,YAFyB,EAGvBmP,oBAAS,GAHc,mBAGxDmJ,EAHwD,KAG1CC,EAH0C,OAInCpJ,mBAAS,IAJ0B,mBAIxDqJ,EAJwD,KAIhDC,EAJgD,KAoB/D,OACI,cAAChD,GAAA,EAAIC,KAAL,UACI,eAACnG,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,OAAN,CAAa/D,MAAO,GAApB,UACI,cAACE,EAAA,EAAD,CAAQ6C,QAAQ,OAAOnD,KAAK,QAAQvD,QAAQ,WAC3C0N,GACG,cAAC7K,EAAA,EAAD,CAAQ6D,QAAQ,QAAQjC,OAAK,EACzBzE,QAASwQ,EAAe,SAAW,YACnChN,QAAS,kBAAMiN,GAAiBD,SAI5C,cAAC/I,EAAA,EAAKC,OAAN,CAAa/D,MAAO,GAApB,SACK6M,EACG,cAACP,GAAD,CAAmBrY,YA5BvC,SAA2BC,GACvBD,EAAYC,GAAM7B,MAAK,kBAAMya,GAAgB,OA2BsB5W,QAASgE,IAE5D,cAACgH,GAAA,EAAKsB,MAAN,CAAYiI,YAAa,EAAzB,mBACKhW,EAAQkG,cADb,aACK,EAAgBqH,KAAI,SAAAtH,GAAK,OACtB,eAACwG,GAAA,EAAD,WACI,cAAC7B,EAAA,EAAD,CAAOP,IAAKpE,EAAMvI,MACjB4X,GACG,eAAC7K,EAAA,EAAOsD,MAAR,CAAc5B,OAAK,EAAC4I,OAAQ,EAA5B,UACI,cAACtK,EAAA,EAAD,CACI4B,OAAK,EACLV,MAAM,QACN/D,QAAQ,OACRR,KAAM,OAASnB,EAAM3H,GACrB0Q,SAAU/I,EAAME,OAChB1E,QAAS6W,IAAW,OAASrS,EAAM3H,IAAMmD,EACzC2J,QAAS,SAAAkB,GAAC,OAvCtD,SAA4BrG,EAAcqG,GACtCiM,EAAUjM,EAAEkM,cAAcpR,MAC1BvH,EAAaoG,GAqCyCwS,CAAmBxS,EAAOqG,MAE5C,cAAC7B,EAAA,EAAD,CACI4B,OAAK,EACLV,MAAM,MACNR,KAAK,QACL1J,QAAS6W,IAAWrS,EAAM3H,IAAMmD,EAChC2J,QAAS,SAAAkB,GAAC,OAzCtD,SAA2BrG,EAAcqG,GACrCiM,EAAUjM,EAAEkM,cAAcpR,MAC1BtH,EAAYmG,GAuC0CyS,CAAkBzS,EAAOqG,IACvC0C,SAAU/I,EAAME,OAChBiB,KAAMnB,EAAM3H,UApBjB2H,EAAM3H,mBCnClCoL,gBAAS,YAA2C,IAAlB1J,EAAiB,EAAjBA,QACtC6H,EAAgB2B,IAAhB3B,aAED4N,EAAQ,CACV,CAACC,SAAU,QAASzE,OAAQ,kBAAM,cAAC,GAAD,MAClC,CAACyE,SAAU,SAAUzE,OAAQ,kBAAM,cAAC,GAAD,CAAejR,QAASA,MAC3D,CAAC0V,SAAU,SAAUzE,OAAQ,kBAAM,cAAC,GAAD,MACnC,CAACyE,SAAU,YAAazE,OAAQ,kBAAM,cAAC,GAAD,MACtC,CAACyE,SAAU,YAAazE,OAAQ,kBAAM,cAAC,GAAD,OAG1C,OACI,cAACsE,GAAA,EAAD,CACIK,KAAM,CAACzJ,OAAO,EAAMd,UAAU,GAC9BsN,aAAa,QACblD,MAAOA,EACPI,YAAa,SAACvJ,EAAGtR,GAAJ,OAAa6M,EAAa9B,aAAa/K,EAAK8a,mB,oBCpBtDpM,gBAAS,YAA0C,IAAlB1J,EAAiB,EAAjBA,QAC5C,OACI,cAAC8N,EAAA,EAAD,UACI,eAACuB,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,CAAa/D,MAAO,GAApB,SACI,cAACxB,GAAA,EAAKgE,MAAN,UACI,eAAChE,GAAA,EAAD,WACI,cAACA,GAAA,EAAKa,MAAN,CAAYC,QAAM,EAACS,KAAK,QAAQjB,IAAKrK,EAAQmB,OAAS,qBACtD,cAAC4I,GAAA,EAAKkC,QAAN,CAAcyI,cAAc,SAA5B,SACI,cAACjJ,EAAA,EAAD,CAAQzB,GAAG,KAAKpC,QAAS5H,EAAQkB,uBAKjD,eAACmO,EAAA,EAAKC,OAAN,CAAa/D,MAAO,EAApB,UACI,eAACqN,GAAA,EAAU7K,MAAX,CAAiBgH,OAAQ,EAAzB,UACI,cAAC6D,GAAA,EAAD,CAAWvI,MAAM,YAAYtO,MAAO/B,EAAQmE,iBAC5C,cAACyU,GAAA,EAAD,CAAWvI,MAAM,YAAYtO,MAAO/B,EAAQwG,oBAEhD,cAACqS,GAAA,EAAD,IACA,cAAC,GAAD,CAAc7Y,QAASA,eCrB5B0J,gBAAS,WAAwB,IACpCnK,EAAaqT,eAAbrT,SACAsI,EAAiB2B,IAAjB3B,aACArC,EAAuDqC,EAAvDrC,eAAgBQ,EAAuC6B,EAAvC7B,YAAahG,EAA0B6H,EAA1B7H,QAAS+F,EAAiB8B,EAAjB9B,aAS9C,OAPAqJ,qBAAU,WAEN,OADApJ,EAAYzG,GACL,WACHwG,EAAa,MAElB,CAACC,EAAazG,EAAUwG,IAEvBP,EAAuB,cAACoM,GAAD,CAAkBhK,QAAQ,uBAGjD,cAACyH,EAAA,EAAD,UACI,cAACA,EAAA,EAAKC,OAAN,CAAa/D,MAAO,GAApB,SACKvL,GACG,qCACI,cAAC,GAAD,CAAeA,QAASA,IACxB,cAAC,GAAD,CAAgBA,QAASA,c,UCrBlC,SAAS8Y,GAAT,GAA+D,IAA7BC,EAA4B,EAAvCC,UAAyBC,EAAc,8BACtDtH,EAAenI,IAA3BrM,UAAYwU,WACnB,OACI,cAAC,KAAD,2BACQsH,GADR,IAEIhI,OAAQ,SAAClB,GAAD,OAAW4B,EAAa,cAACoH,EAAD,eAAehJ,IAAY,cAAC,KAAD,CAAU7F,GAAG,UCTrE,SAASgP,KACpB,OACI,eAACpL,EAAA,EAAD,CAASiD,aAAW,EAApB,UACI,eAACtF,EAAA,EAAD,CAAQN,MAAI,EAAZ,UACI,cAAC8B,GAAA,EAAD,CAAM7F,KAAK,WADf,6DAIA,cAAC0G,EAAA,EAAQqL,OAAT,UACI,cAAC1O,EAAA,EAAD,CAAQT,GAAIkB,IAAMhB,GAAG,cAAc+K,SAAO,EAA1C,4CCiDDvL,oBA1Cf,WACE,IAAM0P,EAAWC,eADJ,EAEoB7P,IAA1BxN,EAFM,EAENA,YAAamB,EAFP,EAEOA,UAUpB,OARAiS,qBAAU,WACJpT,EAAYF,MACdqB,EAAUgK,UAAUmS,SAAQ,kBAAMtd,EAAYuL,kBAE9CvL,EAAYuL,iBAEb,CAACvL,EAAamB,IAEZnB,EAAYsL,UAGf,qCACE,cAAC,IAAD,CAAgBqD,SAAS,eAAe4O,iBAAe,IACvD,cAAC,GAAD,IACA,cAAC,KAAD,CAAOpP,OAAK,EAACqP,KAAK,IAAIR,UAAWS,KACjC,cAAC,KAAD,CACED,KAAM,QACNvI,OAAQ,kBACN,qCACE,cAAC,EAAD,IACA,cAACnH,EAAA,EAAD,CAAWS,MAAO,CAAEiB,UAAW,OAA/B,SACE,eAAC,KAAD,WACE,cAACsN,GAAD,CAAc3O,OAAK,EAACqP,KAAK,cAAcR,UAAWU,KAClD,cAACZ,GAAD,CAAcU,KAAK,kBAAkBR,UAAWW,KAChD,cAACb,GAAD,CAAiCU,KAAM,CAAC,kBAAmB,eAAgBR,UAAWY,IAAnER,EAASrc,KAC5B,cAAC+b,GAAD,CAAcU,KAAK,sBAAsBR,UAAWa,KACpD,cAACf,GAAD,CAAcU,KAAK,UAAUR,UAAWlE,KACxC,cAAC,KAAD,CAAO0E,KAAK,gBAAgBR,UAAWc,KACvC,cAAC,KAAD,CAAOd,UAAWE,mBApBG,cAACtH,GAAD,CAAkBhK,QAAQ,sBCjBhDmS,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrc,MAAK,YAAkD,IAA/Csc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCNC,SAASO,KAAe,IAC7BC,EAAanB,eAAbmB,SAMR,OAJApL,qBAAU,WACRpI,OAAOyT,SAAS,EAAG,KAClB,CAACD,IAEG,KCIF,IAAM5d,GAAS8d,eACtBC,IAAS1J,OACP,cAAC3H,EAAasR,SAAd,CAAuB7Y,MAAOhG,EAA9B,SACE,eAAC,KAAD,CAAQa,QAASA,GAAjB,UACE,cAAC2d,GAAD,IACA,cAAC,GAAD,SAIJM,SAASC,eAAe,SAM1Bf,O","file":"static/js/main.6e319f20.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 5) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { PaginatedResult } from '../models/pagination';\r\nimport { Photo, Profile, UserActivity } from '../models/profile';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from '../stores/store';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL =process.env.REACT_APP_API_URL;// 'http://localhost:5000/api';\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status, config, headers } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                history.push('/not-found');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            } else {\r\n                toast.error(data);\r\n            }\r\n            break;\r\n        case 401:\r\n            if (status === 401 && headers['www-authenticate']?.startsWith('Bearer error=\"invalid_token\"')) {\r\n                store.userStore.logout();\r\n                toast.error('Session expired - please login again');\r\n            }\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', { params })\r\n        .then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n    fbLogin: (accessToken: string) => requests\r\n        .post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n    refreshToken: () => requests.post<User>('/account/refreshToken', {}),\r\n    verifyEmail: (token: string, email: string) => \r\n        requests.post<void>(`/account/verifyEmail?token=${token}&email=${email}`, {}),\r\n    resendEmailConfirm: (email: string) => \r\n        requests.get(`/account/resendEmailConfirmationLink?email=${email}`)\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('photos', formData, {\r\n            headers: { 'Content-type': 'multipart/form-data' }\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\r\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n    listFollowings: (username: string, predicate: string) =>\r\n        requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) =>\r\n        requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees: Profile[]\r\n  }\r\n\r\n  export class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n      Object.assign(this, init);\r\n    }\r\n  }\r\n\r\n  export class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues) {\r\n      if (activity) {\r\n        this.id = activity.id;\r\n        this.title = activity.title;\r\n        this.category = activity.category;\r\n        this.description = activity.description;\r\n        this.date = activity.date;\r\n        this.venue = activity.venue;\r\n        this.city = activity.city;\r\n      }\r\n    }\r\n  }","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    bio?: string;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport {format} from 'date-fns';\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n    activityRegistry = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n        )\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) => {\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n     debugger\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case 'all':\r\n                resetPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    } \r\n\r\n    get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) =>\r\n            a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date!, 'dd MMM yyyy');\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as {[key: string]: Activity[]})\r\n        )\r\n    }\r\n\r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n            result.data.forEach(activity => {\r\n                this.setActivity(activity);\r\n            })\r\n            this.setPagination(result.pagination);\r\n            this.setLoadingInitial(false);\r\n        } catch (error) {\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity;\r\n            return activity;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() => {\r\n                    this.selectedActivity = activity;\r\n                })\r\n                this.setLoadingInitial(false);\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            activity.isGoing = activity.attendees!.some(\r\n                a => a.username === user.username\r\n            )\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n        }\r\n        activity.date = new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createActivity = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUsername = user!.username;\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n                    let updatedActivity = {...this.getActivity(activity.id), ...activity}\r\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n                    this.selectedActivity = updatedActivity as Activity;\r\n                } \r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendance = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                if (this.selectedActivity?.isGoing) {\r\n                    this.selectedActivity.attendees = \r\n                        this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\r\n                    this.selectedActivity.isGoing = false;\r\n                } else {\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedActivity?.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing = true;\r\n                }\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    cancelActivityToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.activityRegistry.forEach(activity => {\r\n            activity.attendees.forEach(attendee => {\r\n                if (attendee.username === username) {\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n                    attendee.following = !attendee.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    clearSelectedActivity = () => {\r\n        this.selectedActivity = undefined;\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings = false;\r\n    activeTab = 0;\r\n    userActivities: UserActivity[] = [];\r\n    loadingActivities = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.activeTab,\r\n            activeTab => {\r\n                if (activeTab === 3 || activeTab === 4) {\r\n                    const predicate = activeTab === 3 ? 'followers' : 'following';\r\n                    this.loadFollowings(predicate);\r\n                } else {\r\n                    this.followings = [];\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) => {\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    get isCurrentUser() {\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n                this.loadingProfile = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if (photo.isMain && store.userStore.user) {\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n                this.uploading = false;\r\n            })\r\n        } catch (error) {   \r\n            console.log(error);\r\n            runInAction(() => this.uploading = false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n                    this.profile.image = photo.url;\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateProfile = async (profile: Partial<Profile>) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateProfile(profile);\r\n            runInAction(() => {\r\n                if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n                    store.userStore.setDisplayName(profile.displayName);\r\n                }\r\n                this.profile = {...this.profile, ...profile as Profile};\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n         this.loading = true;\r\n         try {\r\n             await agent.Profiles.updateFollowing(username);\r\n             store.activityStore.updateAttendeeFollowing(username);\r\n             runInAction(() => {\r\n                 if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\r\n                     following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n                     this.profile.following = !this.profile.following;\r\n                 }\r\n                 if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n                     following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n                 }\r\n                 this.followings.forEach(profile => {\r\n                     if (profile.username === username) {\r\n                         profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                         profile.following = !profile.following;\r\n                     }\r\n                 })\r\n                 this.loading = false;\r\n             })\r\n         } catch (error) {\r\n             console.log(error);\r\n             runInAction(() => this.loading = false);\r\n         }\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n                this.loadingFollowings = false;\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => this.loadingFollowings = false);\r\n        }\r\n    }\r\n\r\n    loadUserActivities = async (username: string, predicate?: string) => {\r\n        this.loadingActivities = true;\r\n        try {\r\n            const activities = await agent.Profiles.listActivities(username, predicate!);\r\n            runInAction(() => {\r\n                this.userActivities = activities;\r\n                this.loadingActivities = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loadingActivities = false;\r\n            })\r\n        }\r\n    }\r\n\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n    }\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        }\r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            runInAction(() => this.user = user);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    register =async(creds:UserFormValues)=>{\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        }\r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    setImage = (image: string) => {\r\n        if (this.user) this.user.image = image;\r\n    } \r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n    }\r\n\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./ProfileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore:CommonStore;\r\n    userStore: UserStore;\r\n    modalStore:ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore:new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore:new ProfileStore(),\r\n    commentStore:new CommentStore()\r\n\r\n}\r\n\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string |null =window.localStorage.getItem('jwt');\r\n    appLoaded=false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n        reaction(\r\n            ()=>this.token,\r\n            token=>{\r\n                if(token){\r\n                    window.localStorage.setItem('jwt',token)\r\n                }\r\n                else {\r\n                    window.localStorage.removeItem('jwt');\r\n                }\r\n            }\r\n        );\r\n\r\n    }\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n    setToken=(token:string |null )=>{\r\n        this.token=token;\r\n    }\r\n    setAppLoaded=() =>{\r\n        this.appLoaded=true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal{\r\n    open:boolean;\r\n    body:JSX.Element|null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n    openModal=(content: JSX.Element)=>{\r\n        this.modal.open=true;\r\n        this.modal.body=content;\r\n    }\r\n    closeModal=()=>{\r\n        this.modal.open=false;\r\n        this.modal.body=null;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if (store.activityStore.selectedActivity) {\r\n            this.hubConnection = new HubConnectionBuilder()\r\n                .withUrl(process.env.REACT_APP_CHAT_URL/* 'http://localhost:5000/chat' */+ '?activityId=' + activityId, {\r\n                    accessTokenFactory: () => store.userStore.user?.token!\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\r\n\r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n                runInAction(() => {\r\n                    comments.forEach(comment => {\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments = comments\r\n                });\r\n            })\r\n\r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment)\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Button, Container, Menu, Image, Dropdown } from 'semantic-ui-react'\nimport { useStore } from '../stores/store';\n//import { useStore } from '../stores/store';\n\nexport default observer(function NavBar() {\n  const { userStore: { user, logout } } = useStore();\n\n  //const {activityStore}=useStore();\n\n\n  return (\n    <Menu inverted fixed='top'>\n      <Container>\n        <Menu.Item as={NavLink} to='/' exact header>\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: '10px' }} />\n          Reactivties\n        </Menu.Item>\n        <Menu.Item as={NavLink} to='/Activities' name='Activities' />\n        <Menu.Item as={NavLink} to='/Errors' name='Errors' />\n        <Menu.Item>\n          <Button as={NavLink} to=\"/CreateActivity\" positive content='Create Activities' />\n        </Menu.Item>\n        <Menu.Item\n          position='right'>\n          <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\n          <Dropdown pointing='top left' text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='MyProfile' icon='user' />\n              <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport { Header, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nexport default observer(function ActivityFilters() {\r\n    const {activityStore: {predicate, setPredicate}} = useStore();\r\n    return (\r\n        <>\r\n            <Menu vertical size='large' style={{ width: '100%', marginTop: 25 }}>\r\n                <Header icon='filter' attached color='teal' content='Filters' />\r\n                <Menu.Item \r\n                    content='All Activites' \r\n                    active={predicate.has('all')}\r\n                    onClick={() => setPredicate('all', 'true')}\r\n                />\r\n                <Menu.Item \r\n                    content=\"I'm going\" \r\n                    active={predicate.has('isGoing')}\r\n                    onClick={() => setPredicate('isGoing', 'true')}\r\n                />\r\n                <Menu.Item \r\n                    content=\"I'm hosting\" \r\n                    active={predicate.has('isHost')}\r\n                    onClick={() => setPredicate('isHost', 'true')}    \r\n                />\r\n            </Menu>\r\n            <Header />\r\n            <Calendar \r\n                onChange={(date: Date) => setPredicate('startDate', date as Date)}\r\n                value={predicate.get('startDate') || new Date() }\r\n            />\r\n        </>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent } from 'react';\r\nimport { Reveal, Button } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n    const {profileStore, userStore} = useStore();\r\n    const {updateFollowing, loading} = profileStore;\r\n\r\n    if (userStore.user?.username === profile.username) return null;\r\n\r\n     function handleFollow(e: SyntheticEvent, username: string) {\r\n         e.preventDefault();\r\n         profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n     }\r\n\r\n    return (\r\n        <Reveal animated='move'>\r\n            <Reveal.Content visible style={{ width: '100%' }}>\r\n                <Button \r\n                    fluid \r\n                    color='teal' \r\n                    content={profile.following ? 'Following' : 'Not following'} />\r\n            </Reveal.Content>\r\n            <Reveal.Content hidden style={{ width: '100%' }}>\r\n                <Button\r\n                    fluid\r\n                    basic\r\n                    color={profile.following ? 'red' : 'green'}\r\n                    content={profile.following ? 'Unfollow' : 'Follow'}\r\n                    loading={loading}\r\n                    onClick={(e) => handleFollow(e, profile.username)}\r\n                />\r\n            </Reveal.Content>\r\n        </Reveal>\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({profile}: Props) {\r\n    function truncate(str: string | undefined) {\r\n        if (str) {\r\n            return str.length > 40 ? str.substring(0, 37) + '...' : str;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card as={Link} to={`/profiles/${profile.username}`}>\r\n            <Image src={profile.image || '/assets/user.png'} />\r\n            <Card.Content>\r\n                <Card.Header>{profile.displayName}</Card.Header>\r\n                <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Icon name='user' />\r\n                {profile.followersCount} followers\r\n            </Card.Content>\r\n            <FollowButton profile={profile} />\r\n        </Card>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image, List, Popup } from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props {\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({ attendees }: Props) {\r\n    const styles = {\r\n        borderColor: 'orange',\r\n        borderWidth: 3\r\n    }\r\n\r\n    return (\r\n        <List horizontal>\r\n            {attendees.map(attendee => (\r\n                <Popup\r\n                    hoverable\r\n                    key={attendee.username}\r\n                    trigger={\r\n                        <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n                            <Image \r\n                                size='mini' \r\n                                circular src={attendee.image || '/assets/user.png'} \r\n                                bordered\r\n                                style={attendee.following ? styles : null}\r\n                            />\r\n                        </List.Item>\r\n                    }\r\n                >\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={attendee} />\r\n                    </Popup.Content>\r\n                </Popup>\r\n\r\n            ))}\r\n        </List>\r\n    )\r\n})","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, ItemGroup, Label, Segment } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { format } from 'date-fns'\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment>\r\n                {activity.isCancelled  &&\r\n                <Label attached='top' color='red' content='Cancelled' style={{textAlign:'center'}}/>\r\n                }\r\n                <ItemGroup>\r\n                    <Item>\r\n                        <Item.Image style={{ marginBottom: 3 }} size='tiny' circular src={activity.host?.image || '/assets/user.png'}/>\r\n                        <Item.Content  >\r\n                            <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                                {activity.title}\r\n                            </Item.Header>\r\n                            <Item.Description>Hosted by <Link to={`profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link></Item.Description>\r\n                            {activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='orange'>\r\n                                        You are hosting this activity\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                             {activity.isGoing && !activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='green'>\r\n                                        You are going to this activity\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                            \r\n                        </Item.Content>\r\n                    </Item>\r\n                </ItemGroup>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock' />{format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n                    <Icon name='marker' />{activity.venue}\r\n                </span>\r\n            </Segment>\r\n            <Segment secondary>\r\n                <ActivityListItemAttendee attendees={activity.attendees!} />\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>\r\n                    {activity.description}\r\n                </span>\r\n                <Button\r\n                    as={Link}\r\n                    to={`/activities/${activity.id}`}\r\n                    color='teal'\r\n                    floated='right'\r\n                    content='View'\r\n                />\r\n            </Segment>\r\n        </Segment.Group>\r\n\r\n\r\n        // <Item key={activity.id}>\r\n        //     <Item.Content>\r\n        //         <Item.Header as='a' > {activity.title} </Item.Header>\r\n        //         <Item.Meta>{activity.date}</Item.Meta>\r\n        //         <Item.Description>\r\n        //             <div>{activity.description}</div>\r\n        //             <div>{activity.city} , {activity.venue} </div>\r\n        //         </Item.Description>\r\n        //         <Item.Extra>\r\n        //             <Button /*onClick={() => { activityStore.selectActivity(activity.id) }} */ as={Link} to={`/activities/${activity.id}`} floated='right' content='View' color='blue' />\r\n        //             <Button\r\n        //                 name={activity.id}\r\n        //                 loading={loading && target === activity.id}\r\n        //                 onClick={(e) => { handleActivityDelete(e, activity.id) }}\r\n        //                 floated='right'\r\n        //                 content='Delete'\r\n        //                 color='red' />\r\n        //             <Label basic content={activity.category} />\r\n\r\n        //         </Item.Extra>\r\n\r\n        //     </Item.Content>\r\n        // </Item>\r\n\r\n\r\n    );\r\n\r\n\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, { Fragment } from 'react'\r\nimport { Header } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\nexport default observer(function ActivityList() {\r\n    const { activityStore } = useStore();\r\n    const { groupedActivities } = activityStore;\r\n    return (\r\n        <>\r\n            {groupedActivities.map(([group, activityies]) => (\r\n                <Fragment key={group}>\r\n                    <Header sub color='teal'>\r\n                        {group}\r\n                    </Header>\r\n                   \r\n                            {activityies.map(activity => (\r\n                                <ActivityListItem key={activity.id} activity={activity} />\r\n\r\n                            ))\r\n\r\n                            }\r\n                     \r\n                </Fragment>\r\n\r\n            ))}\r\n        </>\r\n\r\n    );\r\n\r\n})","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { Grid, Loader } from 'semantic-ui-react';\r\nimport { PagingParams } from '../../../app/models/pagination';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\r\n\r\nexport default observer(function ActivityDashboard() {\r\n    const { activityStore } = useStore();\r\n    const { loadActivities, activityRegistry, setPagingParams, pagination } = activityStore;\r\n    const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n    function handleGetNext() {\r\n        setLoadingNext(true);\r\n        setPagingParams(new PagingParams(pagination!.currentPage + 1))\r\n        loadActivities().then(() => setLoadingNext(false));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activityRegistry.size <= 1) loadActivities();\r\n    }, [activityRegistry.size, loadActivities])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                {activityStore.loadingInitial && !loadingNext ? (\r\n                    <>\r\n                        <ActivityListItemPlaceholder />\r\n                        <ActivityListItemPlaceholder />\r\n                    </>\r\n                ) : (\r\n                        <InfiniteScroll\r\n                            pageStart={0}\r\n                            loadMore={handleGetNext}\r\n                            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n                            initialLoad={false}\r\n                        >\r\n                            <ActivityList />\r\n                        </InfiniteScroll>\r\n                    )}\r\n            </Grid.Column>\r\n            <Grid.Column width='6'>\r\n                <ActivityFilters />\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n                <Loader active={loadingNext} />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Label } from 'semantic-ui-react';\r\nimport Form from 'semantic-ui-react/dist/commonjs/collections/Form';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    label?: string;\r\n    type?:string;\r\n\r\n}\r\nexport default function MyTextInput(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red' >{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n\r\n    );\r\n\r\n\r\n}","import { ErrorMessage, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Button, Form, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function LoginForm() {\r\n    const { userStore } = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', password: '', error: null }}\r\n            onSubmit={(values, { setErrors }) => userStore.login(values).catch(error => setErrors({ error: 'Invalid email or Password' }))}\r\n        >\r\n            {({ handleSubmit, isSubmitting, errors }) => (\r\n                <Form className='ui from' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Login to Reactivites' color='teal' textAlign='center'/>\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type='password' />\r\n                    <ErrorMessage\r\n                        name='error'\r\n                        render={() =>\r\n                            <Label style={{ marginBottom: 10 }} basic color='red' content={errors.error} />}\r\n\r\n                    />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n\r\n        </Formik>\r\n\r\n    );\r\n\r\n})","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\nexport default function ValidationErrors({ errors }: Props) {\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err: any, i:any) => (\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n\r\n\r\n    );\r\n\r\n}","import { ErrorMessage, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Button, Form, Header } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup'\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\nexport default observer(function RegisterForm() {\r\n    const { userStore } = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{ displayName: '', username: '', email: '', password: '', error: null }}\r\n            onSubmit={(values, { setErrors }) => userStore.register(values).catch(error => setErrors({ error }))}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required(),\r\n                username: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n\r\n            })}\r\n        >\r\n            {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n                <Form className='ui from error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign Up to Reactivites' color='teal' textAlign='center' />\r\n                    <MyTextInput name='displayName' placeholder='Display Name' />\r\n                    <MyTextInput name='username' placeholder='Username' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type='password' />\r\n                    <ErrorMessage\r\n                        name='error'\r\n                        render={() =>\r\n                            <ValidationErrors errors={errors.error} />\r\n                        }\r\n\r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting}\r\n                        loading={isSubmitting} positive content='Register' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n\r\n        </Formik>\r\n\r\n    );\r\n\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Header, Segment, Image, Button } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nexport default observer(function HomePage() {\r\n    const { userStore,modalStore } = useStore();\r\n    return (\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container text>\r\n                <Header as=\"h1\" inverted>\r\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{ marginBottom: 12 }} />\r\n                    Reactivities\r\n                </Header>\r\n                {\r\n                    userStore.isLoggedIn ? (\r\n                        <>\r\n                            <Header as='h2' inverted content=\"Welcome to Reactivities\" />\r\n                            <Button as={Link} to='/activities' size='huge' inverted>\r\n                                Go To Activities!\r\n                            </Button>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                        <Button onClick={()=> modalStore.openModal(<LoginForm/>)} size='huge' inverted>\r\n                            Login!\r\n                        </Button>\r\n                        <Button onClick={()=> modalStore.openModal(<RegisterForm/>)} size='huge' inverted>\r\n                            Register!\r\n                        </Button>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n\r\n            </Container>\r\n\r\n        </Segment>\r\n\r\n\r\n    );\r\n})","import React from 'react'\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\nexport default function LoadingComponent({ inverted = true, content = 'Loading...' }: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted} >\r\n            <Loader content={content} />\r\n\r\n        </Dimmer>\r\n\r\n    );\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Label } from 'semantic-ui-react';\r\nimport Form from 'semantic-ui-react/dist/commonjs/collections/Form';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number\r\n    label?: string;\r\n\r\n}\r\nexport default function MyTextArea(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red' >{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n\r\n    );\r\n\r\n\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Label, Select } from 'semantic-ui-react';\r\nimport Form from 'semantic-ui-react/dist/commonjs/collections/Form';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    options : any;\r\n    label?: string;\r\n\r\n}\r\nexport default function MySelectInput(props: Props) {\r\n    const [field, meta,helpers] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select\r\n            clearable \r\n            options={props.options}\r\n            value={field.value || null}\r\n            onChange={(e,d) => helpers.setValue(d.value) }\r\n            onBlur={() => helpers.setTouched(true)}\r\n            placeholder={props.placeholder}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red' >{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n\r\n    );\r\n\r\n\r\n}","export const categoryOptions = [\r\n    { text: 'Drinks', value: 'drink' },\r\n    { text: 'Culture', value: 'culture' },\r\n    { text: 'Film', value: 'film' },\r\n    { text: 'Food', value: 'food' },\r\n    { text: 'Music', value: 'music' },\r\n    { text: 'Travel', value: 'travel' }\r\n\r\n]","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Label } from 'semantic-ui-react';\r\nimport Form from 'semantic-ui-react/dist/commonjs/collections/Form';\r\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps<any>>) {\r\n    const [field, meta, helpers] = useField(props.name!);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker\r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date(field.value)) || null}\r\n                onChange={value => helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red' >{meta.error}</Label>\r\n            ) : null}\r\n        </Form.Field>\r\n    );\r\n\r\n\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, {  useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Button, Header,  Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponents';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid'\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport {  ActivityFormValues } from '../../../app/models/activity';\r\nexport default observer(function ActivityForm() {\r\n    const history = useHistory();\r\n    const { activityStore } = useStore();\r\n    const { createActivity, updateActivity,\r\n        loadActivity, loadingInitial } = activityStore;\r\n    const { id } = useParams<{ id: string }>();\r\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The activity title is requierd'),\r\n        description: Yup.string().required('The activity description is requierd'),\r\n        category: Yup.string().required('The activity category is requierd'),\r\n        date: Yup.string().required('The activity date is requierd').nullable(),\r\n        venue: Yup.string().required('The activity venue is requierd'),\r\n        city: Yup.string().required('The activity city is requierd')\r\n    })\r\n    useEffect(() => {\r\n        if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)));\r\n    }, [id, loadActivity]);\r\n\r\n    function handelFormSubmit(activity: ActivityFormValues) {\r\n        if (!activity.id) {\r\n            let newActivity = {\r\n                ...activity,\r\n                id: uuid()\r\n            };\r\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\r\n        }\r\n        else {\r\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`));\r\n        }\r\n\r\n    }\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading Activity...' />\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Activity Details' sub color='teal' />\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                enableReinitialize\r\n                initialValues={activity}\r\n                onSubmit={values => handelFormSubmit(values)}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off' >\r\n                        <MyTextInput name='title' placeholder='Title' />\r\n                        <MyTextArea rows={3} placeholder='Description' name='description' />\r\n                        <MySelectInput options={categoryOptions} placeholder='Category' name='category' />\r\n                        <MyDateInput\r\n                            placeholderText='Date'\r\n                            name='date'\r\n                            showTimeSelect\r\n                            timeCaption='time'\r\n                            dateFormat='MMMM d, yyyy h:mm aa'\r\n                        />\r\n                        <Header content='Location Details' sub color='teal' />\r\n                        <MyTextInput placeholder='City' name='city' />\r\n                        <MyTextInput placeholder='Venue' name='venue' />\r\n                        <Button\r\n                            disabled={isSubmitting || !dirty || !isValid}\r\n                            loading={isSubmitting}\r\n                            floated='right'\r\n                            positive\r\n                            type='submit'\r\n                            content='Submit' />\r\n                        <Button /*onClick={closeForm} */ as={Link} to='/activities' floated='right' type='button' content='Cancel' />\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n\r\n        </Segment>\r\n\r\n    );\r\n\r\n\r\n\r\n\r\n})\r\n\r\n","import { Formik, Form, Field, FieldProps } from 'formik'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from 'date-fns'\r\n\r\ninterface Props {\r\n    activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n    const { commentStore } = useStore();\r\n\r\n    useEffect(() => {\r\n        if (activityId) {\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n        return () => {\r\n            commentStore.clearComments();\r\n        }\r\n    }, [commentStore, activityId]);\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{ border: 'none' }}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n                <Formik\r\n                    onSubmit={(values, { resetForm }) =>\r\n                        commentStore.addComment(values).then(() => resetForm())}\r\n                    initialValues={{ body: '' }}\r\n                    validationSchema={Yup.object({\r\n                        body: Yup.string().required()\r\n                    })}\r\n                >\r\n                    {({ isSubmitting, isValid, handleSubmit }) => (\r\n                        <Form className='ui form'>\r\n                            <Field name='body'>\r\n                                {(props: FieldProps) => (\r\n                                    <div style={{ position: 'relative' }}>\r\n                                        <Loader active={isSubmitting} />\r\n                                        <textarea\r\n                                            placeholder='Enter your comment (Enter to submit, SHIFT + enter for new line)'\r\n                                            rows={2}\r\n                                            {...props.field}\r\n                                            onKeyPress={e => {\r\n                                                if (e.key === 'Enter' && e.shiftKey) {\r\n                                                    return;\r\n                                                }\r\n                                                if (e.key === 'Enter' && !e.shiftKey) {\r\n                                                    e.preventDefault();\r\n                                                    isValid && handleSubmit();\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n                <Comment.Group>\r\n                    {commentStore.comments.map(comment => (\r\n                        <Comment key={comment.id}>\r\n                            <Comment.Avatar src={comment.image || '/assets/user.png'} />\r\n                            <Comment.Content>\r\n                                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                                    {comment.displayName}\r\n                                </Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>{comment.body}</Comment.Text>\r\n                            </Comment.Content>\r\n                        </Comment>\r\n                    ))}\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react'\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from 'date-fns'\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n    const { activityStore: { updateAttendance, loading, cancelActivityToggle } } = useStore();\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{ padding: '0' }}>\r\n                {activity.isCancelled &&\r\n                    <Label style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }} ribbon color='red' content='Cancelled' />\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{ color: 'white' }}\r\n                                />\r\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                                <p>\r\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}> {activity.host?.displayName}</Link> </strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost ? (\r\n                    <>\r\n                        <Button\r\n                            color={activity.isCancelled ? 'green' : 'red'}\r\n                            floated='left'\r\n                            basic\r\n                            content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\r\n                            onClick={cancelActivityToggle}\r\n                            loading={loading}\r\n                        >\r\n\r\n                        </Button>\r\n                        <Button\r\n                            disabled={activity.isCancelled}\r\n                            as={Link}\r\n                            to={`/manage/${activity.id}`}\r\n                            color='orange'\r\n                            floated='right'>\r\n                            Manage Event\r\n                        </Button>\r\n                    </>\r\n                ) : activity.isGoing ? (\r\n                    <Button\r\n                        loading={loading}\r\n                        onClick={updateAttendance}>Cancel attendance</Button>\r\n                ) : (\r\n                    <Button\r\n                        disabled={activity.isCancelled}\r\n                        loading={loading}\r\n                        onClick={updateAttendance}\r\n                        color='teal'>Join Activity</Button>\r\n                )}\r\n\r\n\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n","\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport {format} from 'date-fns'\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.date!,'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props {\r\n    activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: { attendees, host } }: Props) {\r\n    if (!attendees) return null;\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {attendees.map(attendee => (\r\n                        <Item style={{ position: 'relative' }} key={attendee.username}>\r\n                            {attendee.username === host?.username &&\r\n                                <Label\r\n                                    style={{ position: 'absolute' }}\r\n                                    color='orange'\r\n                                    ribbon='right'\r\n                                >\r\n                                    Host\r\n                                </Label>}\r\n                            <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Item.Header as='h3'>\r\n                                    <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                                </Item.Header>\r\n                                {attendee.following &&\r\n                                <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                            </Item.Content>\r\n                        </Item>\r\n                    ))}\r\n\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponents';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\n\r\nexport default observer(function ActivityDetails() {\r\n    const {activityStore} = useStore();\r\n    const {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} = activityStore;\r\n    const {id} = useParams<{id: string}>();\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id);\r\n        return () => clearSelectedActivity();\r\n    }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n    if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <ActivityDetailedHeader activity={activity} />\r\n                <ActivityDetailedInfo activity={activity} />\r\n                <ActivityDetailedChat activityId={activity.id} />\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n                <ActivityDetailedSidebar activity={activity} />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","\r\nimport React from 'react';\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;//'http://localhost:5000/api/'\r\n    const [errors, setErrors] = useState(null);\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => { debugger; console.log(err.response) });\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors &&\r\n                <ValidationErrors errors={errors} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function ServerError() {\r\n    const { commonStore } = useStore()\r\n    return (\r\n        <Container>\r\n            <Header as='h1' content='Server Error' />\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\r\n            {commonStore.error?.details &&\r\n                <Segment>\r\n                    <Header as='h4' content='Stack trace' color='teal' />\r\n                    <code style={{ marginTop: '10px' }}>{commonStore.error.details}</code>\r\n                </Segment>\r\n            }\r\n        </Container>\r\n    );\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store'\r\n\r\nexport default observer(function ModalContainer(){\r\n    const { modalStore } = useStore();\r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n\r\n    )\r\n\r\n})","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\n\r\ninterface Props {\r\n    setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({setEditMode}: Props) {\r\n    const {profileStore: {profile, updateProfile}} = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{displayName: profile?.displayName, bio: profile?.bio}}\r\n            onSubmit={values => {\r\n                updateProfile(values).then(() => {\r\n                    setEditMode(false);\r\n                })\r\n            }}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required()\r\n            })}\r\n        >\r\n            {({isSubmitting, isValid, dirty}) => (\r\n                <Form className='ui form'>\r\n                    <MyTextInput placeholder='Display Name' name='displayName' />\r\n                    <MyTextArea rows={3} placeholder='Add your bio' name='bio' />\r\n                    <Button \r\n                        positive\r\n                        type='submit'\r\n                        loading={isSubmitting}\r\n                        content='Update profile'\r\n                        floated='right'\r\n                        disabled={!isValid || !dirty}\r\n                    />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})\r\n","import React, {useState} from 'react';\r\nimport {useStore} from \"../../app/stores/store\";\r\nimport {Button, Grid, Header, Tab} from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport default observer(function ProfileAbout() {\r\n    const {profileStore} = useStore();\r\n    const {isCurrentUser, profile} = profileStore;\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\r\n                    {isCurrentUser && (\r\n                        <Button\r\n                            floated='right'\r\n                            basic\r\n                            content={editMode ? 'Cancel' : 'Edit Profile'}\r\n                            onClick={() => setEditMode(!editMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    {editMode ? <ProfileEditForm setEditMode={setEditMode} /> : <span style={{whiteSpace: 'pre-wrap'}}>{profile?.bio}</span>}\r\n\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})\r\n","import React, { SyntheticEvent, useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserActivity } from '../../app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n    { menuItem: 'Future Events', pane: { key: 'future' } },\r\n    { menuItem: 'Past Events', pane: { key: 'past' } },\r\n    { menuItem: 'Hosting', pane: { key: 'hosting' } }\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n    const { profileStore } = useStore();\r\n    const {\r\n        loadUserActivities,\r\n        profile,\r\n        loadingActivities,\r\n        userActivities\r\n    } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadUserActivities(profile!.username);\r\n    }, [loadUserActivities, profile]);\r\n\r\n    const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n        loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\r\n    };\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='calendar' content={'Activities'} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Tab\r\n                        panes={panes}\r\n                        menu={{ secondary: true, pointing: true }}\r\n                        onTabChange={(e, data) => handleTabChange(e, data)}\r\n                    />\r\n                    <br />\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {userActivities.map((activity: UserActivity) => (\r\n                            <Card\r\n                                as={Link}\r\n                                to={`/activities/${activity.id}`}\r\n                                key={activity.id}\r\n                            >\r\n                                <Image\r\n                                    src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                                    style={{ minHeight: 100, objectFit: 'cover' }}\r\n                                />\r\n                                <Card.Content>\r\n                                    <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                                    <Card.Meta textAlign='center'>\r\n                                        <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                                        <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                                    </Card.Meta>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n});","import React from 'react';\r\nimport {Tab, Grid, Header, Card} from \"semantic-ui-react\";\r\nimport ProfileCard from \"./ProfileCard\";\r\nimport {useStore} from \"../../app/stores/store\";\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n    const {profileStore} = useStore();\r\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header\r\n                        floated='left'\r\n                        icon='user'\r\n                        content={activeTab === 3 ? `People following ${profile!.displayName}` : `People ${profile?.displayName} is following`}\r\n                    />\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile => (\r\n                            <ProfileCard key={profile.username} profile={profile} />\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\r\n    return (\r\n        <Cropper \r\n            src={imagePreview}\r\n            style={{height: 200, width: '100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    )\r\n}","import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n    setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\r\n    const dzStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: 'green'\r\n    }\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n        })))\r\n    }, [setFiles])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles} >\r\n            <input {...getInputProps()} />  \r\n            <Icon name='upload' size='huge' />\r\n            <Header content='Drop image here' />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid, Header } from 'semantic-ui-react';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop() {\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 1 - Add Photo' />\r\n                <PhotoWidgetDropzone setFiles={setFiles} />\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 2 - Resize image' />\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 3 - Preview & Upload' />\r\n                {files && files.length > 0 &&\r\n                    <>\r\n                        <div className='img-preview' style={{ minHeight: 200, overflow: 'hidden' }} />\r\n                        <Button.Group widths={2}>\r\n                            <Button loading={loading} onClick={onCrop} positive icon='check' />\r\n                            <Button disabled={loading} onClick={() => setFiles([])} icon='close' />\r\n                        </Button.Group>\r\n                    </>}\r\n\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent, useState } from 'react';\r\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\r\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\r\nimport { Photo, Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n    const { profileStore: { isCurrentUser, uploadPhoto,\r\n        uploading, loading, setMainPhoto, deletePhoto } } = useStore();\r\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n    const [target, setTarget] = useState('');\r\n\r\n    function handlePhotoUpload(file: Blob) {\r\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n    }\r\n\r\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n        setTarget(e.currentTarget.name);\r\n        setMainPhoto(photo);\r\n    }\r\n\r\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n        setTarget(e.currentTarget.name);\r\n        deletePhoto(photo);\r\n    }\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='image' content='Photos' />\r\n                    {isCurrentUser && (\r\n                        <Button floated='right' basic\r\n                            content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n                            onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {addPhotoMode ? (\r\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\r\n                    ) : (\r\n                        <Card.Group itemsPerRow={5}>\r\n                            {profile.photos?.map(photo => (\r\n                                <Card key={photo.id}>\r\n                                    <Image src={photo.url} />\r\n                                    {isCurrentUser && (\r\n                                        <Button.Group fluid widths={2}>\r\n                                            <Button\r\n                                                basic\r\n                                                color='green'\r\n                                                content='Main'\r\n                                                name={'main' + photo.id}\r\n                                                disabled={photo.isMain}\r\n                                                loading={target === 'main' + photo.id && loading}\r\n                                                onClick={e => handleSetMainPhoto(photo, e)}\r\n                                            />\r\n                                            <Button\r\n                                                basic\r\n                                                color='red'\r\n                                                icon='trash'\r\n                                                loading={target === photo.id && loading}\r\n                                                onClick={e => handleDeletePhoto(photo, e)}\r\n                                                disabled={photo.isMain}\r\n                                                name={photo.id}\r\n                                            />\r\n                                        </Button.Group>\r\n                                    )}\r\n                                </Card>\r\n                            ))}\r\n                        </Card.Group>\r\n                    )}\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileActivities from './ProfileActivities';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfilePhotos from './ProfilePhotos';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({profile}: Props) {\r\n    const {profileStore} = useStore();\r\n\r\n    const panes = [\r\n        {menuItem: 'About', render: () => <ProfileAbout />},\r\n        {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />},\r\n        {menuItem: 'Events', render: () => <ProfileActivities />},\r\n        {menuItem: 'Followers', render: () => <ProfileFollowings />},\r\n        {menuItem: 'Following', render: () => <ProfileFollowings />},\r\n    ];\r\n\r\n    return (\r\n        <Tab \r\n            menu={{fluid: true, vertical: true}}\r\n            menuPosition='right'\r\n            panes={panes}\r\n            onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n        />\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({profile}: Props) {\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={profile.displayName} />\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount} />\r\n                        <Statistic label='Following' value={profile.followingCount} />\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                    <FollowButton profile={profile} />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../app/layout/LoadingComponents';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nexport default observer(function ProfilePage() {\r\n    const { username } = useParams<{ username: string }>();\r\n    const { profileStore } = useStore();\r\n    const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfile(username);\r\n        return () => {\r\n            setActiveTab(0);\r\n        }\r\n    }, [loadProfile, username, setActiveTab])\r\n\r\n    if (loadingProfile) return <LoadingComponent content='Loading profile...' />\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile &&\r\n                    <>\r\n                        <ProfileHeader profile={profile} />\r\n                        <ProfileContent profile={profile} />\r\n                    </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import React from 'react'\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router-dom'\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n    const {userStore: {isLoggedIn}} = useStore();\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\r\n        />\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oops - we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    );\r\n\r\n}","import React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\nimport LoadingComponent from './LoadingComponents';\nimport NotFound from '../../features/errors/Notfound';\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore])\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'react-calendar/dist/Calendar.css'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport {  Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history= createBrowserHistory(); \nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop/>\n      <App />\n    </Router>\n  </StoreContext.Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}